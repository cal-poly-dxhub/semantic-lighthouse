Resources:
  DataResourcesMeetingsBucket978E0EC1:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: sl-v3-795592
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - GET
              - PUT
              - POST
            AllowedOrigins:
              - "*"
            MaxAge: 3000
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/DataResources/MeetingsBucket/Resource
  DataResourcesMeetingsBucketPolicy76C6EE20:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: DataResourcesMeetingsBucket978E0EC1
      PolicyDocument:
        Statement:
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
              - s3:PutBucketPolicy
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - DataResourcesMeetingsBucket978E0EC1
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DataResourcesMeetingsBucket978E0EC1
                        - Arn
                    - /*
          - Action: s3:GetObject
            Condition:
              StringEquals:
                AWS:SourceArn:
                  Fn::Join:
                    - ""
                    - - "arn:"
                      - Ref: AWS::Partition
                      - ":cloudfront::"
                      - Ref: AWS::AccountId
                      - :distribution/
                      - Ref: DataResourcesVideosDistributionCB495C72
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - DataResourcesMeetingsBucket978E0EC1
                      - Arn
                  - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/DataResources/MeetingsBucket/Policy/Resource
  DataResourcesMeetingsBucketAutoDeleteObjectsCustomResource151F72E6:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: DataResourcesMeetingsBucket978E0EC1
    DependsOn:
      - DataResourcesMeetingsBucketPolicy76C6EE20
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/DataResources/MeetingsBucket/AutoDeleteObjectsCustomResource/Default
  DataResourcesMeetingsBucketNotificationsCE416002:
    Type: Custom::S3BucketNotifications
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691
          - Arn
      BucketName:
        Ref: DataResourcesMeetingsBucket978E0EC1
      NotificationConfiguration:
        EventBridgeConfiguration: {}
      Managed: true
      SkipDestinationValidation: false
    DependsOn:
      - DataResourcesMeetingsBucketPolicy76C6EE20
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/DataResources/MeetingsBucket/Notifications/Resource
  DataResourcesVideoResponseHeadersPolicy7ACF5AE5:
    Type: AWS::CloudFront::ResponseHeadersPolicy
    Properties:
      ResponseHeadersPolicyConfig:
        CorsConfig:
          AccessControlAllowCredentials: false
          AccessControlAllowHeaders:
            Items:
              - "*"
          AccessControlAllowMethods:
            Items:
              - GET
              - HEAD
              - OPTIONS
          AccessControlAllowOrigins:
            Items:
              - "*"
          AccessControlExposeHeaders:
            Items:
              - Access-Control-Allow-Origin
          OriginOverride: true
        Name: SemanticLighthouseStackv3DataResourcesVideoResponseHeadersPolicyB978BBE2
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/DataResources/VideoResponseHeadersPolicy/Resource
  DataResourcesVideosDistributionOrigin1S3OriginAccessControl74991780:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: SemanticLighthouseStackv3DatOrigin1S3OriginAccessControlA0A602A9
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/DataResources/VideosDistribution/Origin1/S3OriginAccessControl/Resource
  DataResourcesVideosDistributionCB495C72:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
          CachedMethods:
            - GET
            - HEAD
          Compress: true
          ResponseHeadersPolicyId:
            Ref: DataResourcesVideoResponseHeadersPolicy7ACF5AE5
          TargetOriginId: SemanticLighthouseStackv3DataResourcesVideosDistributionOrigin18BA59667
          ViewerProtocolPolicy: redirect-to-https
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Origins:
          - DomainName:
              Fn::GetAtt:
                - DataResourcesMeetingsBucket978E0EC1
                - RegionalDomainName
            Id: SemanticLighthouseStackv3DataResourcesVideosDistributionOrigin18BA59667
            OriginAccessControlId:
              Fn::GetAtt:
                - DataResourcesVideosDistributionOrigin1S3OriginAccessControl74991780
                - Id
            S3OriginConfig:
              OriginAccessIdentity: ""
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/DataResources/VideosDistribution/Resource
  DataResourcesMeetingsTableB4BEF5CF:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: meetingId
          AttributeType: S
        - AttributeName: createdAt
          AttributeType: S
        - AttributeName: userId
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - IndexName: UserMeetingsIndex
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
            - AttributeName: createdAt
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      KeySchema:
        - AttributeName: meetingId
          KeyType: HASH
        - AttributeName: createdAt
          KeyType: RANGE
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/DataResources/MeetingsTable/Resource
  DataResourcesUserPreferencesTableC9E14B7D:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/DataResources/UserPreferencesTable/Resource
  DataResourcesSystemConfigTableCCF6C008:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: configKey
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: configKey
          KeyType: HASH
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/DataResources/SystemConfigTable/Resource
  DataResourcesPopulateConfigLambdaServiceRoleD993AF2C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/DataResources/PopulateConfigLambda/ServiceRole/Resource
  DataResourcesPopulateConfigLambdaServiceRoleDefaultPolicy931F7B48:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DataResourcesSystemConfigTableCCF6C008
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: DataResourcesPopulateConfigLambdaServiceRoleDefaultPolicy931F7B48
      Roles:
        - Ref: DataResourcesPopulateConfigLambdaServiceRoleD993AF2C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/DataResources/PopulateConfigLambda/ServiceRole/DefaultPolicy/Resource
  DataResourcesPopulateConfigLambdaB820123D:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: "

          \        const { DynamoDBClient, BatchWriteItemCommand } = require('@aws-sdk/client-dynamodb');

          \        const https = require('https');

          \        const url = require('url');

          \       \

          \        const sendResponse = async (event, context, responseStatus, responseData = {}) => {

          \          const responseBody = JSON.stringify({

          \            Status: responseStatus,

          \            Reason: 'See CloudWatch Log Stream: ' + context.logStreamName,

          \            PhysicalResourceId: 'populate-system-config',

          \            StackId: event.StackId,

          \            RequestId: event.RequestId,

          \            LogicalResourceId: event.LogicalResourceId,

          \            Data: responseData

          \          });

          \         \

          \          const parsedUrl = url.parse(event.ResponseURL);

          \          const options = {

          \            hostname: parsedUrl.hostname,

          \            port: 443,

          \            path: parsedUrl.path,

          \            method: 'PUT',

          \            headers: {

          \              'content-type': '',

          \              'content-length': responseBody.length

          \            }

          \          };

          \         \

          \          return new Promise((resolve, reject) => {

          \            const request = https.request(options, (response) => {

          \              console.log('Status code: ' + response.statusCode);

          \              console.log('Status message: ' + response.statusMessage);

          \              resolve();

          \            });

          \           \

          \            request.on('error', (error) => {

          \              console.log('send(..) failed executing https.request(..): ' + error);

          \              reject(error);

          \            });

          \           \

          \            request.write(responseBody);

          \            request.end();

          \          });

          \        };

          \       \

          \        exports.handler = async (event, context) => {

          \          console.log('Event:', JSON.stringify(event));

          \         \

          \          try {

          \            if (event.RequestType === 'Delete') {

          \              console.log('Delete request - no action needed');

          \              await sendResponse(event, context, 'SUCCESS');

          \              return;

          \            }

          \           \

          \            const dynamodb = new DynamoDBClient({});

          \            const tableName = process.env.TABLE_NAME;

          \           \

          \            const configItems = [

          \              {

          \                configKey: 'transcript_model_id',

          \                configValue: 'us.anthropic.claude-3-7-sonnet-20250219-v1:0',

          \                description: 'AI model for transcript analysis'

          \              },

          \              {

          \                configKey: 'transcript_max_tokens',

          \                configValue: '8000',

          \                description: 'Maximum tokens for transcript analysis'

          \              },

          \              {

          \                configKey: 'transcript_temperature',

          \                configValue: '0.2',

          \                description: 'Temperature for transcript analysis'

          \              },

          \              {

          \                configKey: 'agenda_model_id',

          \                configValue: 'us.anthropic.claude-sonnet-4-20250514-v1:0',

          \                description: 'AI model for agenda analysis'

          \              },

          \              {

          \                configKey: 'agenda_max_tokens',

          \                configValue: '65535',

          \                description: 'Maximum tokens for agenda analysis'

          \              },

          \              {

          \                configKey: 'agenda_temperature',

          \                configValue: '0.1',

          \                description: 'Temperature for agenda analysis'

          \              },

          \              {

          \                configKey: 'video_chunk_duration_hours',

          \                configValue: '4',

          \                description: 'Video chunk duration in hours'

          \              },

          \              {

          \                configKey: 'presigned_url_expiration_days',

          \                configValue: '7',

          \                description: 'Presigned URL expiration in days'

          \              }

          \            ];

          \           \

          \            const putRequests = configItems.map(item => ({

          \              PutRequest: {

          \                Item: {

          \                  configKey: { S: item.configKey },

          \                  configValue: { S: item.configValue },

          \                  description: { S: item.description },

          \                  createdAt: { S: new Date().toISOString() }

          \                }

          \              }

          \            }));

          \           \

          \            await dynamodb.send(new BatchWriteItemCommand({

          \              RequestItems: {

          \                [tableName]: putRequests

          \              }

          \            }));

          \           \

          \            console.log('Successfully populated system configuration');

          \            await sendResponse(event, context, 'SUCCESS', { ConfigItemsCount: configItems.length });

          \           \

          \          } catch (error) {

          \            console.error('Error populating config:', error);

          \            await sendResponse(event, context, 'FAILED', { Error: error.message });

          \          }

          \        };

          \      "
      Environment:
        Variables:
          TABLE_NAME:
            Ref: DataResourcesSystemConfigTableCCF6C008
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - DataResourcesPopulateConfigLambdaServiceRoleD993AF2C
          - Arn
      Runtime: nodejs18.x
      Timeout: 120
    DependsOn:
      - DataResourcesPopulateConfigLambdaServiceRoleDefaultPolicy931F7B48
      - DataResourcesPopulateConfigLambdaServiceRoleD993AF2C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/DataResources/PopulateConfigLambda/Resource
  DataResourcesPopulateConfigLambdaLogGroupA3746FFC:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: DataResourcesPopulateConfigLambdaB820123D
      RetentionInDays: 731
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/DataResources/PopulateConfigLambda/LogGroup/Resource
  DataResourcesPopulateSystemConfig9C1222B8:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - DataResourcesPopulateConfigLambdaB820123D
          - Arn
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/DataResources/PopulateSystemConfig/Default
  CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role
  CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip
      Timeout: 900
      MemorySize: 128
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
          - Arn
      Runtime: nodejs22.x
      Description:
        Fn::Join:
          - ""
          - - "Lambda function for auto-deleting objects in "
            - Ref: DataResourcesMeetingsBucket978E0EC1
            - " S3 bucket."
    DependsOn:
      - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler
      aws:asset:path: asset.faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6
      aws:asset:property: Code
  BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource
  BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:PutBucketNotification
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
      Roles:
        - Ref: BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource
  BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691:
    Type: AWS::Lambda::Function
    Properties:
      Description: AWS CloudFormation handler for "Custom::S3BucketNotifications" resources (@aws-cdk/aws-s3)
      Code:
        ZipFile: |-
          import boto3  # type: ignore
          import json
          import logging
          import urllib.request

          s3 = boto3.client("s3")

          EVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'
          CONFIGURATION_TYPES = ["TopicConfigurations", "QueueConfigurations", "LambdaFunctionConfigurations"]

          def handler(event: dict, context):
            response_status = "SUCCESS"
            error_message = ""
            try:
              props = event["ResourceProperties"]
              notification_configuration = props["NotificationConfiguration"]
              managed = props.get('Managed', 'true').lower() == 'true'
              skipDestinationValidation = props.get('SkipDestinationValidation', 'false').lower() == 'true'
              stack_id = event['StackId']
              old = event.get("OldResourceProperties", {}).get("NotificationConfiguration", {})
              if managed:
                config = handle_managed(event["RequestType"], notification_configuration)
              else:
                config = handle_unmanaged(props["BucketName"], stack_id, event["RequestType"], notification_configuration, old)
              s3.put_bucket_notification_configuration(Bucket=props["BucketName"], NotificationConfiguration=config, SkipDestinationValidation=skipDestinationValidation)
            except Exception as e:
              logging.exception("Failed to put bucket notification configuration")
              response_status = "FAILED"
              error_message = f"Error: {str(e)}. "
            finally:
              submit_response(event, context, response_status, error_message)

          def handle_managed(request_type, notification_configuration):
            if request_type == 'Delete':
              return {}
            return notification_configuration

          def handle_unmanaged(bucket, stack_id, request_type, notification_configuration, old):
            def get_id(n):
              n['Id'] = ''
              sorted_notifications = sort_filter_rules(n)
              strToHash=json.dumps(sorted_notifications, sort_keys=True).replace('"Name": "prefix"', '"Name": "Prefix"').replace('"Name": "suffix"', '"Name": "Suffix"')
              return f"{stack_id}-{hash(strToHash)}"
            def with_id(n):
              n['Id'] = get_id(n)
              return n

            external_notifications = {}
            existing_notifications = s3.get_bucket_notification_configuration(Bucket=bucket)
            for t in CONFIGURATION_TYPES:
              if request_type == 'Update':
                  old_incoming_ids = [get_id(n) for n in old.get(t, [])]
                  external_notifications[t] = [n for n in existing_notifications.get(t, []) if not get_id(n) in old_incoming_ids]      
              elif request_type == 'Delete':
                  external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f"{stack_id}-")]
              elif request_type == 'Create':
                  external_notifications[t] = [n for n in existing_notifications.get(t, [])]
            if EVENTBRIDGE_CONFIGURATION in existing_notifications:
              external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]

            if request_type == 'Delete':
              return external_notifications

            notifications = {}
            for t in CONFIGURATION_TYPES:
              external = external_notifications.get(t, [])
              incoming = [with_id(n) for n in notification_configuration.get(t, [])]
              notifications[t] = external + incoming

            if EVENTBRIDGE_CONFIGURATION in notification_configuration:
              notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]
            elif EVENTBRIDGE_CONFIGURATION in external_notifications:
              notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]

            return notifications

          def submit_response(event: dict, context, response_status: str, error_message: str):
            response_body = json.dumps(
              {
                "Status": response_status,
                "Reason": f"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}",
                "PhysicalResourceId": event.get("PhysicalResourceId") or event["LogicalResourceId"],
                "StackId": event["StackId"],
                "RequestId": event["RequestId"],
                "LogicalResourceId": event["LogicalResourceId"],
                "NoEcho": False,
              }
            ).encode("utf-8")
            headers = {"content-type": "", "content-length": str(len(response_body))}
            try:
              req = urllib.request.Request(url=event["ResponseURL"], headers=headers, data=response_body, method="PUT")
              with urllib.request.urlopen(req) as response:
                print(response.read().decode("utf-8"))
              print("Status code: " + response.reason)
            except Exception as e:
                print("send(..) failed executing request.urlopen(..): " + str(e))

          def sort_filter_rules(json_obj):
            if not isinstance(json_obj, dict):
                return json_obj
            for key, value in json_obj.items():
                if isinstance(value, dict):
                    json_obj[key] = sort_filter_rules(value)
                elif isinstance(value, list):
                    json_obj[key] = [sort_filter_rules(item) for item in value]
            if "Filter" in json_obj and "Key" in json_obj["Filter"] and "FilterRules" in json_obj["Filter"]["Key"]:
                filter_rules = json_obj["Filter"]["Key"]["FilterRules"]
                sorted_filter_rules = sorted(filter_rules, key=lambda x: x["Name"])
                json_obj["Filter"]["Key"]["FilterRules"] = sorted_filter_rules
            return json_obj
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
          - Arn
      Runtime: python3.11
      Timeout: 300
    DependsOn:
      - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
      - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource
  AuthUserPool8115E87F:
    Type: AWS::Cognito::UserPool
    Properties:
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_phone_number
            Priority: 1
          - Name: verified_email
            Priority: 2
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      AliasAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      EmailVerificationMessage: The verification code to your new account is {####}
      EmailVerificationSubject: Verify your new account
      LambdaConfig:
        CustomMessage:
          Fn::GetAtt:
            - CustomEmailCustomMessageLambda37FB35A9
            - Arn
        PostConfirmation:
          Fn::GetAtt:
            - AuthPostConfirmationLambda76B6DE9D
            - Arn
      SmsVerificationMessage: The verification code to your new account is {####}
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_CODE
        EmailMessage: The verification code to your new account is {####}
        EmailSubject: Verify your new account
        SmsMessage: The verification code to your new account is {####}
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Auth/UserPool/Resource
  AuthUserPoolAdminsGroup89379A46:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      Description: Administrators group
      GroupName: SemanticLighthouseAdminsGroup-v3
      Precedence: 1
      UserPoolId:
        Ref: AuthUserPool8115E87F
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Auth/UserPool/AdminsGroup/Resource
  AuthUserPoolUsersGroupAAFEC657:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      Description: Users group
      GroupName: SemanticLighthouseUsersGroup-v3
      Precedence: 2
      UserPoolId:
        Ref: AuthUserPool8115E87F
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Auth/UserPool/UsersGroup/Resource
  AuthUserPoolPostConfirmationCognitoCCE904CE:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - AuthPostConfirmationLambda76B6DE9D
          - Arn
      Principal: cognito-idp.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - AuthUserPool8115E87F
          - Arn
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Auth/UserPool/PostConfirmationCognito
  AuthUserPoolCustomMessageCognito6AB39127:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - CustomEmailCustomMessageLambda37FB35A9
          - Arn
      Principal: cognito-idp.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - AuthUserPool8115E87F
          - Arn
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Auth/UserPool/CustomMessageCognito
  AuthUserPoolClient0AA456E4:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      AllowedOAuthFlows:
        - implicit
        - code
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - profile
        - phone
        - email
        - openid
        - aws.cognito.signin.user.admin
      CallbackURLs:
        - https://example.com
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_CUSTOM_AUTH
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      SupportedIdentityProviders:
        - COGNITO
      UserPoolId:
        Ref: AuthUserPool8115E87F
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Auth/UserPoolClient/Resource
  AuthPostConfirmationLambdaLogGroupDD108AE4:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Auth/PostConfirmationLambdaLogGroup/Resource
  AuthPostConfirmationLambdaServiceRole33E162A4:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Auth/PostConfirmationLambda/ServiceRole/Resource
  AuthPostConfirmationLambdaServiceRoleDefaultPolicy4E3CA195:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - cognito-idp:AdminAddUserToGroup
              - cognito-idp:ListUsers
              - cognito-idp:UpdateUserPool
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:cognito-idp:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :userpool/*
          - Action:
              - sns:CreateTopic
              - sns:SetTopicAttributes
              - sns:Subscribe
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:sns:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :semantic-lighthouse-user-*
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DataResourcesUserPreferencesTableC9E14B7D
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: AuthPostConfirmationLambdaServiceRoleDefaultPolicy4E3CA195
      Roles:
        - Ref: AuthPostConfirmationLambdaServiceRole33E162A4
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Auth/PostConfirmationLambda/ServiceRole/DefaultPolicy/Resource
  AuthPostConfirmationLambda76B6DE9D:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 934d46943cbdc2fb049773e27177c53d413114af931d480e349ef20bb308dfe6.zip
      Description: lambda function handling post-confirmation with SNS topic creation
      Environment:
        Variables:
          ADMIN_GROUP_NAME: SemanticLighthouseAdminsGroup-v3
          USER_PREFERENCES_TABLE_NAME:
            Ref: DataResourcesUserPreferencesTableC9E14B7D
      Handler: post-confirmation.handler
      LoggingConfig:
        LogGroup:
          Ref: AuthPostConfirmationLambdaLogGroupDD108AE4
      Role:
        Fn::GetAtt:
          - AuthPostConfirmationLambdaServiceRole33E162A4
          - Arn
      Runtime: nodejs18.x
      Timeout: 30
    DependsOn:
      - AuthPostConfirmationLambdaServiceRoleDefaultPolicy4E3CA195
      - AuthPostConfirmationLambdaServiceRole33E162A4
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Auth/PostConfirmationLambda/Resource
      aws:asset:path: asset.934d46943cbdc2fb049773e27177c53d413114af931d480e349ef20bb308dfe6
      aws:asset:is-bundled: false
      aws:asset:property: Code
  MeetingApiMeetingAuthApi91B1C27C:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: API for video authentication
      Name: MeetingAuthApi
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Resource
  MeetingApiMeetingAuthApiDeploymentB234B3FC5b1ab84c1d561985227c378426ed5153:
    Type: AWS::ApiGateway::Deployment
    Properties:
      Description: API for video authentication
      RestApiId:
        Ref: MeetingApiMeetingAuthApi91B1C27C
    DependsOn:
      - MeetingApiCognitoAuthorizer9ABAB257
      - MeetingApiMeetingAuthApimeetingIdminutesGET45AE9624
      - MeetingApiMeetingAuthApimeetingIdminutesOPTIONS2F6950F9
      - MeetingApiMeetingAuthApimeetingIdminutes09CF73BD
      - MeetingApiMeetingAuthApimeetingIdOPTIONS5D1CA6BE
      - MeetingApiMeetingAuthApimeetingIdprivatepresignedGETC3420A8C
      - MeetingApiMeetingAuthApimeetingIdprivatepresignedOPTIONS40B09BDA
      - MeetingApiMeetingAuthApimeetingIdprivatepresigned77E68FC1
      - MeetingApiMeetingAuthApimeetingIdpublicpresignedGETD1014C06
      - MeetingApiMeetingAuthApimeetingIdpublicpresignedOPTIONS9587EFF8
      - MeetingApiMeetingAuthApimeetingIdpublicpresignedFAA8A810
      - MeetingApiMeetingAuthApimeetingId30CC64A0
      - MeetingApiMeetingAuthApimeetingsGETD85B8C5C
      - MeetingApiMeetingAuthApimeetingsOPTIONSC57965D9
      - MeetingApiMeetingAuthApimeetings399936EF
      - MeetingApiMeetingAuthApiOPTIONS8C58F5A0
      - MeetingApiMeetingAuthApiuploadOPTIONS23415514
      - MeetingApiMeetingAuthApiuploadPOST94389151
      - MeetingApiMeetingAuthApiuploadCD3A3EA9
      - MeetingApiMeetingAuthApiuserscreateOPTIONS66099A80
      - MeetingApiMeetingAuthApiuserscreatePOST3DC96AFE
      - MeetingApiMeetingAuthApiuserscreate02B62D39
      - MeetingApiMeetingAuthApiusersOPTIONSD3E52D98
      - MeetingApiMeetingAuthApiusersF967C2CD
      - MeetingApiMeetingAuthApiuserssetupOPTIONSBF8806A0
      - MeetingApiMeetingAuthApiuserssetupPOSTEEA23D3E
      - MeetingApiMeetingAuthApiuserssetupC4DC3196
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Deployment/Resource
  MeetingApiMeetingAuthApiDeploymentStageprod66E6B130:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId:
        Ref: MeetingApiMeetingAuthApiDeploymentB234B3FC5b1ab84c1d561985227c378426ed5153
      MethodSettings:
        - DataTraceEnabled: true
          HttpMethod: "*"
          LoggingLevel: INFO
          MetricsEnabled: true
          ResourcePath: /*
      RestApiId:
        Ref: MeetingApiMeetingAuthApi91B1C27C
      StageName: prod
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/DeploymentStage.prod/Resource
  MeetingApiMeetingAuthApiOPTIONS8C58F5A0:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Fn::GetAtt:
          - MeetingApiMeetingAuthApi91B1C27C
          - RootResourceId
      RestApiId:
        Ref: MeetingApiMeetingAuthApi91B1C27C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/OPTIONS/Resource
  MeetingApiMeetingAuthApimeetingId30CC64A0:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - MeetingApiMeetingAuthApi91B1C27C
          - RootResourceId
      PathPart: "{meetingId}"
      RestApiId:
        Ref: MeetingApiMeetingAuthApi91B1C27C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/{meetingId}/Resource
  MeetingApiMeetingAuthApimeetingIdOPTIONS5D1CA6BE:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: MeetingApiMeetingAuthApimeetingId30CC64A0
      RestApiId:
        Ref: MeetingApiMeetingAuthApi91B1C27C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/{meetingId}/OPTIONS/Resource
  MeetingApiMeetingAuthApimeetingIdprivatepresigned77E68FC1:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: MeetingApiMeetingAuthApimeetingId30CC64A0
      PathPart: private-presigned
      RestApiId:
        Ref: MeetingApiMeetingAuthApi91B1C27C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/{meetingId}/private-presigned/Resource
  MeetingApiMeetingAuthApimeetingIdprivatepresignedOPTIONS40B09BDA:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: MeetingApiMeetingAuthApimeetingIdprivatepresigned77E68FC1
      RestApiId:
        Ref: MeetingApiMeetingAuthApi91B1C27C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/{meetingId}/private-presigned/OPTIONS/Resource
  MeetingApiMeetingAuthApimeetingIdprivatepresignedGETApiPermissionSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetingIdprivatepresigned1788FBCB:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - MeetingApiPrivateVideoAuthLambda56111C34
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: MeetingApiMeetingAuthApi91B1C27C
            - /
            - Ref: MeetingApiMeetingAuthApiDeploymentStageprod66E6B130
            - /GET/*/private-presigned
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/{meetingId}/private-presigned/GET/ApiPermission.SemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2B.GET..{meetingId}.private-presigned
  MeetingApiMeetingAuthApimeetingIdprivatepresignedGETApiPermissionTestSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetingIdprivatepresigned6F57FADE:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - MeetingApiPrivateVideoAuthLambda56111C34
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: MeetingApiMeetingAuthApi91B1C27C
            - /test-invoke-stage/GET/*/private-presigned
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/{meetingId}/private-presigned/GET/ApiPermission.Test.SemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2B.GET..{meetingId}.private-presigned
  MeetingApiMeetingAuthApimeetingIdprivatepresignedGETC3420A8C:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: MeetingApiCognitoAuthorizer9ABAB257
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - MeetingApiPrivateVideoAuthLambda56111C34
                  - Arn
              - /invocations
      ResourceId:
        Ref: MeetingApiMeetingAuthApimeetingIdprivatepresigned77E68FC1
      RestApiId:
        Ref: MeetingApiMeetingAuthApi91B1C27C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/{meetingId}/private-presigned/GET/Resource
  MeetingApiMeetingAuthApimeetingIdpublicpresignedFAA8A810:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: MeetingApiMeetingAuthApimeetingId30CC64A0
      PathPart: public-presigned
      RestApiId:
        Ref: MeetingApiMeetingAuthApi91B1C27C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/{meetingId}/public-presigned/Resource
  MeetingApiMeetingAuthApimeetingIdpublicpresignedOPTIONS9587EFF8:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: MeetingApiMeetingAuthApimeetingIdpublicpresignedFAA8A810
      RestApiId:
        Ref: MeetingApiMeetingAuthApi91B1C27C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/{meetingId}/public-presigned/OPTIONS/Resource
  MeetingApiMeetingAuthApimeetingIdpublicpresignedGETApiPermissionSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetingIdpublicpresigned0A284613:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - MeetingApiPublicVideoAuthLambdaF7C1656E
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: MeetingApiMeetingAuthApi91B1C27C
            - /
            - Ref: MeetingApiMeetingAuthApiDeploymentStageprod66E6B130
            - /GET/*/public-presigned
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/{meetingId}/public-presigned/GET/ApiPermission.SemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2B.GET..{meetingId}.public-presigned
  MeetingApiMeetingAuthApimeetingIdpublicpresignedGETApiPermissionTestSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetingIdpublicpresignedE1A7C34F:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - MeetingApiPublicVideoAuthLambdaF7C1656E
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: MeetingApiMeetingAuthApi91B1C27C
            - /test-invoke-stage/GET/*/public-presigned
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/{meetingId}/public-presigned/GET/ApiPermission.Test.SemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2B.GET..{meetingId}.public-presigned
  MeetingApiMeetingAuthApimeetingIdpublicpresignedGETD1014C06:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - MeetingApiPublicVideoAuthLambdaF7C1656E
                  - Arn
              - /invocations
      ResourceId:
        Ref: MeetingApiMeetingAuthApimeetingIdpublicpresignedFAA8A810
      RestApiId:
        Ref: MeetingApiMeetingAuthApi91B1C27C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/{meetingId}/public-presigned/GET/Resource
  MeetingApiMeetingAuthApimeetingIdminutes09CF73BD:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: MeetingApiMeetingAuthApimeetingId30CC64A0
      PathPart: minutes
      RestApiId:
        Ref: MeetingApiMeetingAuthApi91B1C27C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/{meetingId}/minutes/Resource
  MeetingApiMeetingAuthApimeetingIdminutesOPTIONS2F6950F9:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: MeetingApiMeetingAuthApimeetingIdminutes09CF73BD
      RestApiId:
        Ref: MeetingApiMeetingAuthApi91B1C27C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/{meetingId}/minutes/OPTIONS/Resource
  MeetingApiMeetingAuthApimeetingIdminutesGETApiPermissionSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetingIdminutes5D1546AB:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - MeetingApiMinutesLambda7107097E
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: MeetingApiMeetingAuthApi91B1C27C
            - /
            - Ref: MeetingApiMeetingAuthApiDeploymentStageprod66E6B130
            - /GET/*/minutes
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/{meetingId}/minutes/GET/ApiPermission.SemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2B.GET..{meetingId}.minutes
  MeetingApiMeetingAuthApimeetingIdminutesGETApiPermissionTestSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetingIdminutes49CDC07C:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - MeetingApiMinutesLambda7107097E
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: MeetingApiMeetingAuthApi91B1C27C
            - /test-invoke-stage/GET/*/minutes
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/{meetingId}/minutes/GET/ApiPermission.Test.SemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2B.GET..{meetingId}.minutes
  MeetingApiMeetingAuthApimeetingIdminutesGET45AE9624:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - MeetingApiMinutesLambda7107097E
                  - Arn
              - /invocations
      ResourceId:
        Ref: MeetingApiMeetingAuthApimeetingIdminutes09CF73BD
      RestApiId:
        Ref: MeetingApiMeetingAuthApi91B1C27C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/{meetingId}/minutes/GET/Resource
  MeetingApiMeetingAuthApiuploadCD3A3EA9:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - MeetingApiMeetingAuthApi91B1C27C
          - RootResourceId
      PathPart: upload
      RestApiId:
        Ref: MeetingApiMeetingAuthApi91B1C27C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/upload/Resource
  MeetingApiMeetingAuthApiuploadOPTIONS23415514:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: MeetingApiMeetingAuthApiuploadCD3A3EA9
      RestApiId:
        Ref: MeetingApiMeetingAuthApi91B1C27C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/upload/OPTIONS/Resource
  MeetingApiMeetingAuthApiuploadPOSTApiPermissionSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BPOSTupload8F12CDAB:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - MeetingApiUploadLambdaD696F561
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: MeetingApiMeetingAuthApi91B1C27C
            - /
            - Ref: MeetingApiMeetingAuthApiDeploymentStageprod66E6B130
            - /POST/upload
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/upload/POST/ApiPermission.SemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2B.POST..upload
  MeetingApiMeetingAuthApiuploadPOSTApiPermissionTestSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BPOSTupload6BAA258E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - MeetingApiUploadLambdaD696F561
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: MeetingApiMeetingAuthApi91B1C27C
            - /test-invoke-stage/POST/upload
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/upload/POST/ApiPermission.Test.SemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2B.POST..upload
  MeetingApiMeetingAuthApiuploadPOST94389151:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: MeetingApiCognitoAuthorizer9ABAB257
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - MeetingApiUploadLambdaD696F561
                  - Arn
              - /invocations
      ResourceId:
        Ref: MeetingApiMeetingAuthApiuploadCD3A3EA9
      RestApiId:
        Ref: MeetingApiMeetingAuthApi91B1C27C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/upload/POST/Resource
  MeetingApiMeetingAuthApimeetings399936EF:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - MeetingApiMeetingAuthApi91B1C27C
          - RootResourceId
      PathPart: meetings
      RestApiId:
        Ref: MeetingApiMeetingAuthApi91B1C27C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/meetings/Resource
  MeetingApiMeetingAuthApimeetingsOPTIONSC57965D9:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: MeetingApiMeetingAuthApimeetings399936EF
      RestApiId:
        Ref: MeetingApiMeetingAuthApi91B1C27C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/meetings/OPTIONS/Resource
  MeetingApiMeetingAuthApimeetingsGETApiPermissionSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetingsE358DDBA:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - MeetingApiMeetingsLambdaE8EB33B4
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: MeetingApiMeetingAuthApi91B1C27C
            - /
            - Ref: MeetingApiMeetingAuthApiDeploymentStageprod66E6B130
            - /GET/meetings
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/meetings/GET/ApiPermission.SemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2B.GET..meetings
  MeetingApiMeetingAuthApimeetingsGETApiPermissionTestSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetings81669039:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - MeetingApiMeetingsLambdaE8EB33B4
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: MeetingApiMeetingAuthApi91B1C27C
            - /test-invoke-stage/GET/meetings
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/meetings/GET/ApiPermission.Test.SemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2B.GET..meetings
  MeetingApiMeetingAuthApimeetingsGETD85B8C5C:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - MeetingApiMeetingsLambdaE8EB33B4
                  - Arn
              - /invocations
      ResourceId:
        Ref: MeetingApiMeetingAuthApimeetings399936EF
      RestApiId:
        Ref: MeetingApiMeetingAuthApi91B1C27C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/meetings/GET/Resource
  MeetingApiMeetingAuthApiusersF967C2CD:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - MeetingApiMeetingAuthApi91B1C27C
          - RootResourceId
      PathPart: users
      RestApiId:
        Ref: MeetingApiMeetingAuthApi91B1C27C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/users/Resource
  MeetingApiMeetingAuthApiusersOPTIONSD3E52D98:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: MeetingApiMeetingAuthApiusersF967C2CD
      RestApiId:
        Ref: MeetingApiMeetingAuthApi91B1C27C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/users/OPTIONS/Resource
  MeetingApiMeetingAuthApiuserscreate02B62D39:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: MeetingApiMeetingAuthApiusersF967C2CD
      PathPart: create
      RestApiId:
        Ref: MeetingApiMeetingAuthApi91B1C27C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/users/create/Resource
  MeetingApiMeetingAuthApiuserscreateOPTIONS66099A80:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: MeetingApiMeetingAuthApiuserscreate02B62D39
      RestApiId:
        Ref: MeetingApiMeetingAuthApi91B1C27C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/users/create/OPTIONS/Resource
  MeetingApiMeetingAuthApiuserscreatePOSTApiPermissionSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BPOSTuserscreate49382053:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - MeetingApiCreateUserLambda9E01B102
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: MeetingApiMeetingAuthApi91B1C27C
            - /
            - Ref: MeetingApiMeetingAuthApiDeploymentStageprod66E6B130
            - /POST/users/create
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/users/create/POST/ApiPermission.SemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2B.POST..users.create
  MeetingApiMeetingAuthApiuserscreatePOSTApiPermissionTestSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BPOSTuserscreateBD51C245:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - MeetingApiCreateUserLambda9E01B102
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: MeetingApiMeetingAuthApi91B1C27C
            - /test-invoke-stage/POST/users/create
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/users/create/POST/ApiPermission.Test.SemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2B.POST..users.create
  MeetingApiMeetingAuthApiuserscreatePOST3DC96AFE:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: MeetingApiCognitoAuthorizer9ABAB257
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - MeetingApiCreateUserLambda9E01B102
                  - Arn
              - /invocations
      ResourceId:
        Ref: MeetingApiMeetingAuthApiuserscreate02B62D39
      RestApiId:
        Ref: MeetingApiMeetingAuthApi91B1C27C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/users/create/POST/Resource
  MeetingApiMeetingAuthApiuserssetupC4DC3196:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: MeetingApiMeetingAuthApiusersF967C2CD
      PathPart: setup
      RestApiId:
        Ref: MeetingApiMeetingAuthApi91B1C27C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/users/setup/Resource
  MeetingApiMeetingAuthApiuserssetupOPTIONSBF8806A0:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: MeetingApiMeetingAuthApiuserssetupC4DC3196
      RestApiId:
        Ref: MeetingApiMeetingAuthApi91B1C27C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/users/setup/OPTIONS/Resource
  MeetingApiMeetingAuthApiuserssetupPOSTApiPermissionSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BPOSTuserssetup233FE5D7:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - MeetingApiSetupUserLambdaBF4D0E3E
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: MeetingApiMeetingAuthApi91B1C27C
            - /
            - Ref: MeetingApiMeetingAuthApiDeploymentStageprod66E6B130
            - /POST/users/setup
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/users/setup/POST/ApiPermission.SemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2B.POST..users.setup
  MeetingApiMeetingAuthApiuserssetupPOSTApiPermissionTestSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BPOSTuserssetup0B469AA4:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - MeetingApiSetupUserLambdaBF4D0E3E
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: MeetingApiMeetingAuthApi91B1C27C
            - /test-invoke-stage/POST/users/setup
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/users/setup/POST/ApiPermission.Test.SemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2B.POST..users.setup
  MeetingApiMeetingAuthApiuserssetupPOSTEEA23D3E:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: MeetingApiCognitoAuthorizer9ABAB257
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - MeetingApiSetupUserLambdaBF4D0E3E
                  - Arn
              - /invocations
      ResourceId:
        Ref: MeetingApiMeetingAuthApiuserssetupC4DC3196
      RestApiId:
        Ref: MeetingApiMeetingAuthApi91B1C27C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingAuthApi/Default/users/setup/POST/Resource
  MeetingApiCognitoAuthorizer9ABAB257:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      IdentitySource: method.request.header.Authorization
      Name: SemanticLighthouseStackv3MeetingApiCognitoAuthorizer4616C00B
      ProviderARNs:
        - Fn::GetAtt:
            - AuthUserPool8115E87F
            - Arn
      RestApiId:
        Ref: MeetingApiMeetingAuthApi91B1C27C
      Type: COGNITO_USER_POOLS
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/CognitoAuthorizer/Resource
  MeetingApiUploadLambdaLogGroupAC7B4F8A:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/UploadLambdaLogGroup/Resource
  MeetingApiUploadLambdaServiceRoleF7775E37:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/UploadLambda/ServiceRole/Resource
  MeetingApiUploadLambdaServiceRoleDefaultPolicy0E29563A:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DataResourcesMeetingsTableB4BEF5CF
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DataResourcesMeetingsTableB4BEF5CF
                        - Arn
                    - /index/*
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DataResourcesMeetingsBucket978E0EC1
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DataResourcesMeetingsBucket978E0EC1
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: MeetingApiUploadLambdaServiceRoleDefaultPolicy0E29563A
      Roles:
        - Ref: MeetingApiUploadLambdaServiceRoleF7775E37
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/UploadLambda/ServiceRole/DefaultPolicy/Resource
  MeetingApiUploadLambdaD696F561:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 07c97b1e7878cc42d4744db4f86369a53a9c73bb13578b704a45f514c70ad706.zip
      Environment:
        Variables:
          MEETINGS_BUCKET_NAME:
            Ref: DataResourcesMeetingsBucket978E0EC1
          CLOUDFRONT_DOMAIN_NAME:
            Fn::GetAtt:
              - DataResourcesVideosDistributionCB495C72
              - DomainName
          MEETINGS_TABLE_NAME:
            Ref: DataResourcesMeetingsTableB4BEF5CF
      Handler: upload.handler
      LoggingConfig:
        LogGroup:
          Ref: MeetingApiUploadLambdaLogGroupAC7B4F8A
      Role:
        Fn::GetAtt:
          - MeetingApiUploadLambdaServiceRoleF7775E37
          - Arn
      Runtime: nodejs18.x
    DependsOn:
      - MeetingApiUploadLambdaServiceRoleDefaultPolicy0E29563A
      - MeetingApiUploadLambdaServiceRoleF7775E37
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/UploadLambda/Resource
      aws:asset:path: asset.07c97b1e7878cc42d4744db4f86369a53a9c73bb13578b704a45f514c70ad706
      aws:asset:is-bundled: false
      aws:asset:property: Code
  MeetingApiPrivateVideoAuthLambdaLogGroup9D0E335E:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/PrivateVideoAuthLambdaLogGroup/Resource
  MeetingApiPrivateVideoAuthLambdaServiceRole4BF63F0F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/PrivateVideoAuthLambda/ServiceRole/Resource
  MeetingApiPrivateVideoAuthLambdaServiceRoleDefaultPolicyED2D7946:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DataResourcesMeetingsTableB4BEF5CF
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DataResourcesMeetingsTableB4BEF5CF
                        - Arn
                    - /index/*
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DataResourcesMeetingsBucket978E0EC1
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DataResourcesMeetingsBucket978E0EC1
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: MeetingApiPrivateVideoAuthLambdaServiceRoleDefaultPolicyED2D7946
      Roles:
        - Ref: MeetingApiPrivateVideoAuthLambdaServiceRole4BF63F0F
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/PrivateVideoAuthLambda/ServiceRole/DefaultPolicy/Resource
  MeetingApiPrivateVideoAuthLambda56111C34:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: eb3d1e8eddc3c0d8adc103cc63d629df439234bd65f58df443c399753d73b148.zip
      Environment:
        Variables:
          MEETINGS_BUCKET_NAME:
            Ref: DataResourcesMeetingsBucket978E0EC1
          MEETINGS_TABLE_NAME:
            Ref: DataResourcesMeetingsTableB4BEF5CF
          CLOUDFRONT_DOMAIN_NAME:
            Fn::GetAtt:
              - DataResourcesVideosDistributionCB495C72
              - DomainName
      Handler: private-presigned.handler
      LoggingConfig:
        LogGroup:
          Ref: MeetingApiPrivateVideoAuthLambdaLogGroup9D0E335E
      Role:
        Fn::GetAtt:
          - MeetingApiPrivateVideoAuthLambdaServiceRole4BF63F0F
          - Arn
      Runtime: nodejs18.x
    DependsOn:
      - MeetingApiPrivateVideoAuthLambdaServiceRoleDefaultPolicyED2D7946
      - MeetingApiPrivateVideoAuthLambdaServiceRole4BF63F0F
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/PrivateVideoAuthLambda/Resource
      aws:asset:path: asset.eb3d1e8eddc3c0d8adc103cc63d629df439234bd65f58df443c399753d73b148
      aws:asset:is-bundled: false
      aws:asset:property: Code
  MeetingApiPublicVideoAuthLambdaLogGroupE85B4552:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/PublicVideoAuthLambdaLogGroup/Resource
  MeetingApiPublicVideoAuthLambdaServiceRoleC7FF5A88:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/PublicVideoAuthLambda/ServiceRole/Resource
  MeetingApiPublicVideoAuthLambdaServiceRoleDefaultPolicyC66ABF2B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DataResourcesMeetingsTableB4BEF5CF
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DataResourcesMeetingsTableB4BEF5CF
                        - Arn
                    - /index/*
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DataResourcesMeetingsBucket978E0EC1
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DataResourcesMeetingsBucket978E0EC1
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: MeetingApiPublicVideoAuthLambdaServiceRoleDefaultPolicyC66ABF2B
      Roles:
        - Ref: MeetingApiPublicVideoAuthLambdaServiceRoleC7FF5A88
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/PublicVideoAuthLambda/ServiceRole/DefaultPolicy/Resource
  MeetingApiPublicVideoAuthLambdaF7C1656E:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: eb3d1e8eddc3c0d8adc103cc63d629df439234bd65f58df443c399753d73b148.zip
      Environment:
        Variables:
          MEETINGS_BUCKET_NAME:
            Ref: DataResourcesMeetingsBucket978E0EC1
          MEETINGS_TABLE_NAME:
            Ref: DataResourcesMeetingsTableB4BEF5CF
          CLOUDFRONT_DOMAIN_NAME:
            Fn::GetAtt:
              - DataResourcesVideosDistributionCB495C72
              - DomainName
      Handler: public-presigned.handler
      LoggingConfig:
        LogGroup:
          Ref: MeetingApiPublicVideoAuthLambdaLogGroupE85B4552
      Role:
        Fn::GetAtt:
          - MeetingApiPublicVideoAuthLambdaServiceRoleC7FF5A88
          - Arn
      Runtime: nodejs18.x
    DependsOn:
      - MeetingApiPublicVideoAuthLambdaServiceRoleDefaultPolicyC66ABF2B
      - MeetingApiPublicVideoAuthLambdaServiceRoleC7FF5A88
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/PublicVideoAuthLambda/Resource
      aws:asset:path: asset.eb3d1e8eddc3c0d8adc103cc63d629df439234bd65f58df443c399753d73b148
      aws:asset:is-bundled: false
      aws:asset:property: Code
  MeetingApiMinutesLambdaLogGroupE2147950:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MinutesLambdaLogGroup/Resource
  MeetingApiMinutesLambdaServiceRole11625A47:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MinutesLambda/ServiceRole/Resource
  MeetingApiMinutesLambdaServiceRoleDefaultPolicyA20AEA35:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DataResourcesMeetingsTableB4BEF5CF
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DataResourcesMeetingsTableB4BEF5CF
                        - Arn
                    - /index/*
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DataResourcesMeetingsBucket978E0EC1
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DataResourcesMeetingsBucket978E0EC1
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: MeetingApiMinutesLambdaServiceRoleDefaultPolicyA20AEA35
      Roles:
        - Ref: MeetingApiMinutesLambdaServiceRole11625A47
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MinutesLambda/ServiceRole/DefaultPolicy/Resource
  MeetingApiMinutesLambda7107097E:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 3f1806180a885fa38de60230e2aced8757c374d46c1c1f329120a80f1db70bcb.zip
      Environment:
        Variables:
          MEETINGS_BUCKET_NAME:
            Ref: DataResourcesMeetingsBucket978E0EC1
          CLOUDFRONT_DOMAIN_NAME:
            Fn::GetAtt:
              - DataResourcesVideosDistributionCB495C72
              - DomainName
      Handler: minutes.handler
      LoggingConfig:
        LogGroup:
          Ref: MeetingApiMinutesLambdaLogGroupE2147950
      Role:
        Fn::GetAtt:
          - MeetingApiMinutesLambdaServiceRole11625A47
          - Arn
      Runtime: nodejs18.x
    DependsOn:
      - MeetingApiMinutesLambdaServiceRoleDefaultPolicyA20AEA35
      - MeetingApiMinutesLambdaServiceRole11625A47
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MinutesLambda/Resource
      aws:asset:path: asset.3f1806180a885fa38de60230e2aced8757c374d46c1c1f329120a80f1db70bcb
      aws:asset:is-bundled: false
      aws:asset:property: Code
  MeetingApiMeetingsLambdaLogGroup4C8C440B:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingsLambdaLogGroup/Resource
  MeetingApiMeetingsLambdaServiceRoleF241B9EF:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingsLambda/ServiceRole/Resource
  MeetingApiMeetingsLambdaServiceRoleDefaultPolicy8836CAA8:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DataResourcesMeetingsTableB4BEF5CF
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DataResourcesMeetingsTableB4BEF5CF
                        - Arn
                    - /index/*
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DataResourcesMeetingsBucket978E0EC1
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DataResourcesMeetingsBucket978E0EC1
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: MeetingApiMeetingsLambdaServiceRoleDefaultPolicy8836CAA8
      Roles:
        - Ref: MeetingApiMeetingsLambdaServiceRoleF241B9EF
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingsLambda/ServiceRole/DefaultPolicy/Resource
  MeetingApiMeetingsLambdaE8EB33B4:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 3f1806180a885fa38de60230e2aced8757c374d46c1c1f329120a80f1db70bcb.zip
      Environment:
        Variables:
          MEETINGS_BUCKET_NAME:
            Ref: DataResourcesMeetingsBucket978E0EC1
          CLOUDFRONT_DOMAIN_NAME:
            Fn::GetAtt:
              - DataResourcesVideosDistributionCB495C72
              - DomainName
      Handler: meetings.handler
      LoggingConfig:
        LogGroup:
          Ref: MeetingApiMeetingsLambdaLogGroup4C8C440B
      Role:
        Fn::GetAtt:
          - MeetingApiMeetingsLambdaServiceRoleF241B9EF
          - Arn
      Runtime: nodejs18.x
    DependsOn:
      - MeetingApiMeetingsLambdaServiceRoleDefaultPolicy8836CAA8
      - MeetingApiMeetingsLambdaServiceRoleF241B9EF
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/MeetingsLambda/Resource
      aws:asset:path: asset.3f1806180a885fa38de60230e2aced8757c374d46c1c1f329120a80f1db70bcb
      aws:asset:is-bundled: false
      aws:asset:property: Code
  MeetingApiCreateUserLambdaLogGroupC4DF5C73:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/CreateUserLambdaLogGroup/Resource
  MeetingApiCreateUserLambdaServiceRoleF859F654:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/CreateUserLambda/ServiceRole/Resource
  MeetingApiCreateUserLambdaServiceRoleDefaultPolicy7E01AF35:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - cognito-idp:AdminAddUserToGroup
              - cognito-idp:UpdateUserPool
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:cognito-idp:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :userpool/*
          - Action:
              - sns:CreateTopic
              - sns:SetTopicAttributes
              - sns:Subscribe
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:sns:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :semantic-lighthouse-user-*
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DataResourcesUserPreferencesTableC9E14B7D
                  - Arn
              - Ref: AWS::NoValue
          - Action: cognito-idp:AdminCreateUser
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - AuthUserPool8115E87F
                - Arn
        Version: "2012-10-17"
      PolicyName: MeetingApiCreateUserLambdaServiceRoleDefaultPolicy7E01AF35
      Roles:
        - Ref: MeetingApiCreateUserLambdaServiceRoleF859F654
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/CreateUserLambda/ServiceRole/DefaultPolicy/Resource
  MeetingApiCreateUserLambda9E01B102:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 934d46943cbdc2fb049773e27177c53d413114af931d480e349ef20bb308dfe6.zip
      Environment:
        Variables:
          USER_POOL_ID:
            Ref: AuthUserPool8115E87F
          GROUP_NAME: SemanticLighthouseUsersGroup-v3
          USER_PREFERENCES_TABLE_NAME:
            Ref: DataResourcesUserPreferencesTableC9E14B7D
      Handler: create-user.handler
      LoggingConfig:
        LogGroup:
          Ref: MeetingApiCreateUserLambdaLogGroupC4DF5C73
      Role:
        Fn::GetAtt:
          - MeetingApiCreateUserLambdaServiceRoleF859F654
          - Arn
      Runtime: nodejs18.x
    DependsOn:
      - MeetingApiCreateUserLambdaServiceRoleDefaultPolicy7E01AF35
      - MeetingApiCreateUserLambdaServiceRoleF859F654
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/CreateUserLambda/Resource
      aws:asset:path: asset.934d46943cbdc2fb049773e27177c53d413114af931d480e349ef20bb308dfe6
      aws:asset:is-bundled: false
      aws:asset:property: Code
  MeetingApiSetupUserLambdaLogGroup4758E1D7:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/SetupUserLambdaLogGroup/Resource
  MeetingApiSetupUserLambdaServiceRole95720C21:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/SetupUserLambda/ServiceRole/Resource
  MeetingApiSetupUserLambdaServiceRoleDefaultPolicyE4DE88D6:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - cognito-idp:AdminInitiateAuth
              - cognito-idp:AdminRespondToAuthChallenge
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - AuthUserPool8115E87F
                - Arn
        Version: "2012-10-17"
      PolicyName: MeetingApiSetupUserLambdaServiceRoleDefaultPolicyE4DE88D6
      Roles:
        - Ref: MeetingApiSetupUserLambdaServiceRole95720C21
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/SetupUserLambda/ServiceRole/DefaultPolicy/Resource
  MeetingApiSetupUserLambdaBF4D0E3E:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 934d46943cbdc2fb049773e27177c53d413114af931d480e349ef20bb308dfe6.zip
      Environment:
        Variables:
          USER_POOL_ID:
            Ref: AuthUserPool8115E87F
          CLIENT_ID:
            Ref: AuthUserPoolClient0AA456E4
      Handler: setup-user.handler
      LoggingConfig:
        LogGroup:
          Ref: MeetingApiSetupUserLambdaLogGroup4758E1D7
      Role:
        Fn::GetAtt:
          - MeetingApiSetupUserLambdaServiceRole95720C21
          - Arn
      Runtime: nodejs18.x
    DependsOn:
      - MeetingApiSetupUserLambdaServiceRoleDefaultPolicyE4DE88D6
      - MeetingApiSetupUserLambdaServiceRole95720C21
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingApi/SetupUserLambda/Resource
      aws:asset:path: asset.934d46943cbdc2fb049773e27177c53d413114af931d480e349ef20bb308dfe6
      aws:asset:is-bundled: false
      aws:asset:property: Code
  FrontendFrontendBucket428B8C09:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Frontend/FrontendBucket/Resource
  FrontendFrontendBucketPolicy9C197D3C:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: FrontendFrontendBucket428B8C09
      PolicyDocument:
        Statement:
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
              - s3:PutBucketPolicy
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - FrontendFrontendBucket428B8C09
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - FrontendFrontendBucket428B8C09
                        - Arn
                    - /*
          - Action: s3:GetObject
            Condition:
              StringEquals:
                AWS:SourceArn:
                  Fn::Join:
                    - ""
                    - - "arn:"
                      - Ref: AWS::Partition
                      - ":cloudfront::"
                      - Ref: AWS::AccountId
                      - :distribution/
                      - Ref: FrontendFrontendDistribution0FCC69EF
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - FrontendFrontendBucket428B8C09
                      - Arn
                  - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Frontend/FrontendBucket/Policy/Resource
  FrontendFrontendBucketAutoDeleteObjectsCustomResource14730577:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: FrontendFrontendBucket428B8C09
    DependsOn:
      - FrontendFrontendBucketPolicy9C197D3C
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Frontend/FrontendBucket/AutoDeleteObjectsCustomResource/Default
  FrontendRewriteFunctionF742F0EE:
    Type: AWS::CloudFront::Function
    Properties:
      AutoPublish: true
      FunctionCode: |
        // archaic code for this function because its neccessary, idk why but it works lol
        // middleman because of s3 and nextjs static site file descriptions (appends .html or index.html if not present)
        function handler(event) {
          var request = event.request;
          var uri = request.uri;

          // return .js, .css, .png as is
          if (uri.match(/\.[a-zA-Z0-9]+$/)) {
            return request;
          }

          // root
          if (uri === "" || uri === "/") {
            request.uri = "/index.html";
            return request;
          }

          // look for index.html in url directory
          if (uri.endsWith("/")) {
            request.uri = uri + "index.html";
            return request;
          }

          // /* -> /*/ index.html
          request.uri = uri + "/index.html";
          return request;
        }
      FunctionConfig:
        Comment:
          Fn::Join:
            - ""
            - - Ref: AWS::Region
              - SemanticLighthoudRewriteFunctionFE05C0B1
        Runtime: cloudfront-js-1.0
      Name:
        Fn::Join:
          - ""
          - - Ref: AWS::Region
            - SemanticLighthoudRewriteFunctionFE05C0B1
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Frontend/RewriteFunction/Resource
  FrontendFrontendOACEDB090D6:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Description: OAC for frontend bucket
        Name: SemanticLighthouseStackv3FrontendFrontendOACB7A32E6D
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Frontend/FrontendOAC/Resource
  FrontendFrontendDistribution0FCC69EF:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        DefaultCacheBehavior:
          CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
          Compress: true
          FunctionAssociations:
            - EventType: viewer-request
              FunctionARN:
                Fn::GetAtt:
                  - FrontendRewriteFunctionF742F0EE
                  - FunctionARN
          TargetOriginId: SemanticLighthouseStackv3FrontendFrontendDistributionOrigin10E46F051
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Origins:
          - DomainName:
              Fn::GetAtt:
                - FrontendFrontendBucket428B8C09
                - RegionalDomainName
            Id: SemanticLighthouseStackv3FrontendFrontendDistributionOrigin10E46F051
            OriginAccessControlId:
              Fn::GetAtt:
                - FrontendFrontendOACEDB090D6
                - Id
            S3OriginConfig:
              OriginAccessIdentity: ""
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Frontend/FrontendDistribution/Resource
  FrontendFrontendSourceBucket0C00C963:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
        - Key: aws-cdk:cr-owned:7a981b6d
          Value: "true"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Frontend/FrontendSourceBucket/Resource
  FrontendFrontendSourceBucketPolicy25A7FC2F:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: FrontendFrontendSourceBucket0C00C963
      PolicyDocument:
        Statement:
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
              - s3:PutBucketPolicy
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - FrontendFrontendSourceBucket0C00C963
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - FrontendFrontendSourceBucket0C00C963
                        - Arn
                    - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Frontend/FrontendSourceBucket/Policy/Resource
  FrontendFrontendSourceBucketAutoDeleteObjectsCustomResource855A5EE3:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: FrontendFrontendSourceBucket0C00C963
    DependsOn:
      - FrontendFrontendSourceBucketPolicy25A7FC2F
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Frontend/FrontendSourceBucket/AutoDeleteObjectsCustomResource/Default
  FrontendFrontendSourceDeploymentLogGroupC3AC9817:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Frontend/FrontendSourceDeploymentLogGroup/Resource
  FrontendFrontendSourceDeploymentAwsCliLayer04D8FFE7:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: b8ab94266984268614c3fb2824a1c3a55395746c48b28c003b08bc1d08688f3e.zip
      Description: /opt/awscli/aws
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Frontend/FrontendSourceDeployment/AwsCliLayer/Resource
      aws:asset:path: asset.b8ab94266984268614c3fb2824a1c3a55395746c48b28c003b08bc1d08688f3e.zip
      aws:asset:is-bundled: false
      aws:asset:property: Content
  FrontendFrontendSourceDeploymentCustomResource3B7EA699:
    Type: Custom::CDKBucketDeployment
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536
          - Arn
      SourceBucketNames:
        - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
      SourceObjectKeys:
        - 8c0fa38fe41943b3a918e548488b2fd722d20ed155db0dc02db486dab9b54da9.zip
      DestinationBucketName:
        Ref: FrontendFrontendSourceBucket0C00C963
      Extract: false
      Prune: true
      OutputObjectKeys: true
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Frontend/FrontendSourceDeployment/CustomResource/Default
  FrontendFrontendBuildLogGroupA86362FC:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Frontend/FrontendBuildLogGroup/Resource
  FrontendFrontendBuildRoleC7BFCAC8:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: "2012-10-17"
    DependsOn:
      - AuthUserPoolAdminsGroup89379A46
      - AuthUserPoolCustomMessageCognito6AB39127
      - AuthUserPoolPostConfirmationCognitoCCE904CE
      - AuthUserPool8115E87F
      - AuthUserPoolUsersGroupAAFEC657
      - AuthUserPoolClient0AA456E4
      - FrontendFrontendDistribution0FCC69EF
      - FrontendFrontendSourceDeploymentAwsCliLayer04D8FFE7
      - FrontendFrontendSourceDeploymentCustomResource3B7EA699
      - MeetingApiMeetingAuthApimeetingIdminutesGETApiPermissionSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetingIdminutes5D1546AB
      - MeetingApiMeetingAuthApimeetingIdminutesGETApiPermissionTestSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetingIdminutes49CDC07C
      - MeetingApiMeetingAuthApimeetingIdminutesGET45AE9624
      - MeetingApiMeetingAuthApimeetingIdminutesOPTIONS2F6950F9
      - MeetingApiMeetingAuthApimeetingIdminutes09CF73BD
      - MeetingApiMeetingAuthApimeetingIdOPTIONS5D1CA6BE
      - MeetingApiMeetingAuthApimeetingIdprivatepresignedGETApiPermissionSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetingIdprivatepresigned1788FBCB
      - MeetingApiMeetingAuthApimeetingIdprivatepresignedGETApiPermissionTestSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetingIdprivatepresigned6F57FADE
      - MeetingApiMeetingAuthApimeetingIdprivatepresignedGETC3420A8C
      - MeetingApiMeetingAuthApimeetingIdprivatepresignedOPTIONS40B09BDA
      - MeetingApiMeetingAuthApimeetingIdprivatepresigned77E68FC1
      - MeetingApiMeetingAuthApimeetingIdpublicpresignedGETApiPermissionSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetingIdpublicpresigned0A284613
      - MeetingApiMeetingAuthApimeetingIdpublicpresignedGETApiPermissionTestSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetingIdpublicpresignedE1A7C34F
      - MeetingApiMeetingAuthApimeetingIdpublicpresignedGETD1014C06
      - MeetingApiMeetingAuthApimeetingIdpublicpresignedOPTIONS9587EFF8
      - MeetingApiMeetingAuthApimeetingIdpublicpresignedFAA8A810
      - MeetingApiMeetingAuthApimeetingId30CC64A0
      - MeetingApiMeetingAuthApimeetingsGETApiPermissionSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetingsE358DDBA
      - MeetingApiMeetingAuthApimeetingsGETApiPermissionTestSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetings81669039
      - MeetingApiMeetingAuthApimeetingsGETD85B8C5C
      - MeetingApiMeetingAuthApimeetingsOPTIONSC57965D9
      - MeetingApiMeetingAuthApimeetings399936EF
      - MeetingApiMeetingAuthApiOPTIONS8C58F5A0
      - MeetingApiMeetingAuthApiuploadOPTIONS23415514
      - MeetingApiMeetingAuthApiuploadPOSTApiPermissionSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BPOSTupload8F12CDAB
      - MeetingApiMeetingAuthApiuploadPOSTApiPermissionTestSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BPOSTupload6BAA258E
      - MeetingApiMeetingAuthApiuploadPOST94389151
      - MeetingApiMeetingAuthApiuploadCD3A3EA9
      - MeetingApiMeetingAuthApiuserscreateOPTIONS66099A80
      - MeetingApiMeetingAuthApiuserscreatePOSTApiPermissionSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BPOSTuserscreate49382053
      - MeetingApiMeetingAuthApiuserscreatePOSTApiPermissionTestSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BPOSTuserscreateBD51C245
      - MeetingApiMeetingAuthApiuserscreatePOST3DC96AFE
      - MeetingApiMeetingAuthApiuserscreate02B62D39
      - MeetingApiMeetingAuthApiusersOPTIONSD3E52D98
      - MeetingApiMeetingAuthApiusersF967C2CD
      - MeetingApiMeetingAuthApiuserssetupOPTIONSBF8806A0
      - MeetingApiMeetingAuthApiuserssetupPOSTApiPermissionSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BPOSTuserssetup233FE5D7
      - MeetingApiMeetingAuthApiuserssetupPOSTApiPermissionTestSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BPOSTuserssetup0B469AA4
      - MeetingApiMeetingAuthApiuserssetupPOSTEEA23D3E
      - MeetingApiMeetingAuthApiuserssetupC4DC3196
      - MeetingApiMeetingAuthApiDeploymentB234B3FC5b1ab84c1d561985227c378426ed5153
      - MeetingApiMeetingAuthApiDeploymentStageprod66E6B130
      - MeetingApiMeetingAuthApi91B1C27C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Frontend/FrontendBuild/Role/Resource
  FrontendFrontendBuildRoleDefaultPolicy75BAEB47:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - FrontendFrontendSourceBucket0C00C963
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - FrontendFrontendSourceBucket0C00C963
                        - Arn
                    - /
                    - Fn::Select:
                        - 0
                        - Fn::GetAtt:
                            - FrontendFrontendSourceDeploymentCustomResource3B7EA699
                            - SourceObjectKeys
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - FrontendFrontendSourceBucket0C00C963
                        - Arn
                    - /*
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - FrontendFrontendBucket428B8C09
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - FrontendFrontendBucket428B8C09
                        - Arn
                    - /*
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - FrontendFrontendBuildLogGroupA86362FC
                - Arn
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: FrontendFrontendBuild5BFE8AE0
                    - :*
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: FrontendFrontendBuild5BFE8AE0
          - Action:
              - codebuild:BatchPutCodeCoverages
              - codebuild:BatchPutTestCases
              - codebuild:CreateReport
              - codebuild:CreateReportGroup
              - codebuild:UpdateReport
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codebuild:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :report-group/
                  - Ref: FrontendFrontendBuild5BFE8AE0
                  - -*
          - Action: cloudfront:CreateInvalidation
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":cloudfront::"
                  - Ref: AWS::AccountId
                  - :distribution/
                  - Ref: FrontendFrontendDistribution0FCC69EF
        Version: "2012-10-17"
      PolicyName: FrontendFrontendBuildRoleDefaultPolicy75BAEB47
      Roles:
        - Ref: FrontendFrontendBuildRoleC7BFCAC8
    DependsOn:
      - AuthUserPoolAdminsGroup89379A46
      - AuthUserPoolCustomMessageCognito6AB39127
      - AuthUserPoolPostConfirmationCognitoCCE904CE
      - AuthUserPool8115E87F
      - AuthUserPoolUsersGroupAAFEC657
      - AuthUserPoolClient0AA456E4
      - FrontendFrontendDistribution0FCC69EF
      - FrontendFrontendSourceDeploymentAwsCliLayer04D8FFE7
      - FrontendFrontendSourceDeploymentCustomResource3B7EA699
      - MeetingApiMeetingAuthApimeetingIdminutesGETApiPermissionSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetingIdminutes5D1546AB
      - MeetingApiMeetingAuthApimeetingIdminutesGETApiPermissionTestSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetingIdminutes49CDC07C
      - MeetingApiMeetingAuthApimeetingIdminutesGET45AE9624
      - MeetingApiMeetingAuthApimeetingIdminutesOPTIONS2F6950F9
      - MeetingApiMeetingAuthApimeetingIdminutes09CF73BD
      - MeetingApiMeetingAuthApimeetingIdOPTIONS5D1CA6BE
      - MeetingApiMeetingAuthApimeetingIdprivatepresignedGETApiPermissionSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetingIdprivatepresigned1788FBCB
      - MeetingApiMeetingAuthApimeetingIdprivatepresignedGETApiPermissionTestSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetingIdprivatepresigned6F57FADE
      - MeetingApiMeetingAuthApimeetingIdprivatepresignedGETC3420A8C
      - MeetingApiMeetingAuthApimeetingIdprivatepresignedOPTIONS40B09BDA
      - MeetingApiMeetingAuthApimeetingIdprivatepresigned77E68FC1
      - MeetingApiMeetingAuthApimeetingIdpublicpresignedGETApiPermissionSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetingIdpublicpresigned0A284613
      - MeetingApiMeetingAuthApimeetingIdpublicpresignedGETApiPermissionTestSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetingIdpublicpresignedE1A7C34F
      - MeetingApiMeetingAuthApimeetingIdpublicpresignedGETD1014C06
      - MeetingApiMeetingAuthApimeetingIdpublicpresignedOPTIONS9587EFF8
      - MeetingApiMeetingAuthApimeetingIdpublicpresignedFAA8A810
      - MeetingApiMeetingAuthApimeetingId30CC64A0
      - MeetingApiMeetingAuthApimeetingsGETApiPermissionSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetingsE358DDBA
      - MeetingApiMeetingAuthApimeetingsGETApiPermissionTestSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetings81669039
      - MeetingApiMeetingAuthApimeetingsGETD85B8C5C
      - MeetingApiMeetingAuthApimeetingsOPTIONSC57965D9
      - MeetingApiMeetingAuthApimeetings399936EF
      - MeetingApiMeetingAuthApiOPTIONS8C58F5A0
      - MeetingApiMeetingAuthApiuploadOPTIONS23415514
      - MeetingApiMeetingAuthApiuploadPOSTApiPermissionSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BPOSTupload8F12CDAB
      - MeetingApiMeetingAuthApiuploadPOSTApiPermissionTestSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BPOSTupload6BAA258E
      - MeetingApiMeetingAuthApiuploadPOST94389151
      - MeetingApiMeetingAuthApiuploadCD3A3EA9
      - MeetingApiMeetingAuthApiuserscreateOPTIONS66099A80
      - MeetingApiMeetingAuthApiuserscreatePOSTApiPermissionSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BPOSTuserscreate49382053
      - MeetingApiMeetingAuthApiuserscreatePOSTApiPermissionTestSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BPOSTuserscreateBD51C245
      - MeetingApiMeetingAuthApiuserscreatePOST3DC96AFE
      - MeetingApiMeetingAuthApiuserscreate02B62D39
      - MeetingApiMeetingAuthApiusersOPTIONSD3E52D98
      - MeetingApiMeetingAuthApiusersF967C2CD
      - MeetingApiMeetingAuthApiuserssetupOPTIONSBF8806A0
      - MeetingApiMeetingAuthApiuserssetupPOSTApiPermissionSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BPOSTuserssetup233FE5D7
      - MeetingApiMeetingAuthApiuserssetupPOSTApiPermissionTestSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BPOSTuserssetup0B469AA4
      - MeetingApiMeetingAuthApiuserssetupPOSTEEA23D3E
      - MeetingApiMeetingAuthApiuserssetupC4DC3196
      - MeetingApiMeetingAuthApiDeploymentB234B3FC5b1ab84c1d561985227c378426ed5153
      - MeetingApiMeetingAuthApiDeploymentStageprod66E6B130
      - MeetingApiMeetingAuthApi91B1C27C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Frontend/FrontendBuild/Role/DefaultPolicy/Resource
  FrontendFrontendBuild5BFE8AE0:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        EncryptionDisabled: true
        Location:
          Ref: FrontendFrontendBucket428B8C09
        Name: /
        NamespaceType: NONE
        Packaging: NONE
        Type: S3
      Cache:
        Type: NO_CACHE
      EncryptionKey: alias/aws/s3
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: NEXT_PUBLIC_AWS_REGION
            Type: PLAINTEXT
            Value:
              Ref: AWS::Region
          - Name: NEXT_PUBLIC_AWS_USER_POOL_ID
            Type: PLAINTEXT
            Value:
              Ref: AuthUserPool8115E87F
          - Name: NEXT_PUBLIC_AWS_USER_POOL_WEB_CLIENT_ID
            Type: PLAINTEXT
            Value:
              Ref: AuthUserPoolClient0AA456E4
          - Name: NEXT_PUBLIC_DISTRIBUTION_BASE_URL
            Type: PLAINTEXT
            Value:
              Fn::Join:
                - ""
                - - https://
                  - Fn::GetAtt:
                      - FrontendFrontendDistribution0FCC69EF
                      - DomainName
          - Name: NEXT_PUBLIC_MEETING_API_URL
            Type: PLAINTEXT
            Value:
              Fn::Join:
                - ""
                - - https://
                  - Ref: MeetingApiMeetingAuthApi91B1C27C
                  - .execute-api.
                  - Ref: AWS::Region
                  - "."
                  - Ref: AWS::URLSuffix
                  - /
                  - Ref: MeetingApiMeetingAuthApiDeploymentStageprod66E6B130
                  - /
        Image: aws/codebuild/standard:7.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      LogsConfig:
        CloudWatchLogs:
          GroupName:
            Ref: FrontendFrontendBuildLogGroupA86362FC
          Status: ENABLED
      ServiceRole:
        Fn::GetAtt:
          - FrontendFrontendBuildRoleC7BFCAC8
          - Arn
      Source:
        BuildSpec: |-
          {
            "version": "0.2",
            "phases": {
              "install": {
                "commands": [
                  "cd frontend",
                  "echo installing dependencies...",
                  "yarn install"
                ]
              },
              "build": {
                "commands": [
                  "echo building...",
                  "yarn build"
                ]
              }
            },
            "artifacts": {
              "base-directory": "frontend/out",
              "files": [
                "**/*"
              ]
            }
          }
        Location:
          Fn::Join:
            - ""
            - - Ref: FrontendFrontendSourceBucket0C00C963
              - /
              - Fn::Select:
                  - 0
                  - Fn::GetAtt:
                      - FrontendFrontendSourceDeploymentCustomResource3B7EA699
                      - SourceObjectKeys
        Type: S3
    DependsOn:
      - AuthUserPoolAdminsGroup89379A46
      - AuthUserPoolCustomMessageCognito6AB39127
      - AuthUserPoolPostConfirmationCognitoCCE904CE
      - AuthUserPool8115E87F
      - AuthUserPoolUsersGroupAAFEC657
      - AuthUserPoolClient0AA456E4
      - FrontendFrontendDistribution0FCC69EF
      - FrontendFrontendSourceDeploymentAwsCliLayer04D8FFE7
      - FrontendFrontendSourceDeploymentCustomResource3B7EA699
      - MeetingApiMeetingAuthApimeetingIdminutesGETApiPermissionSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetingIdminutes5D1546AB
      - MeetingApiMeetingAuthApimeetingIdminutesGETApiPermissionTestSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetingIdminutes49CDC07C
      - MeetingApiMeetingAuthApimeetingIdminutesGET45AE9624
      - MeetingApiMeetingAuthApimeetingIdminutesOPTIONS2F6950F9
      - MeetingApiMeetingAuthApimeetingIdminutes09CF73BD
      - MeetingApiMeetingAuthApimeetingIdOPTIONS5D1CA6BE
      - MeetingApiMeetingAuthApimeetingIdprivatepresignedGETApiPermissionSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetingIdprivatepresigned1788FBCB
      - MeetingApiMeetingAuthApimeetingIdprivatepresignedGETApiPermissionTestSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetingIdprivatepresigned6F57FADE
      - MeetingApiMeetingAuthApimeetingIdprivatepresignedGETC3420A8C
      - MeetingApiMeetingAuthApimeetingIdprivatepresignedOPTIONS40B09BDA
      - MeetingApiMeetingAuthApimeetingIdprivatepresigned77E68FC1
      - MeetingApiMeetingAuthApimeetingIdpublicpresignedGETApiPermissionSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetingIdpublicpresigned0A284613
      - MeetingApiMeetingAuthApimeetingIdpublicpresignedGETApiPermissionTestSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetingIdpublicpresignedE1A7C34F
      - MeetingApiMeetingAuthApimeetingIdpublicpresignedGETD1014C06
      - MeetingApiMeetingAuthApimeetingIdpublicpresignedOPTIONS9587EFF8
      - MeetingApiMeetingAuthApimeetingIdpublicpresignedFAA8A810
      - MeetingApiMeetingAuthApimeetingId30CC64A0
      - MeetingApiMeetingAuthApimeetingsGETApiPermissionSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetingsE358DDBA
      - MeetingApiMeetingAuthApimeetingsGETApiPermissionTestSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BGETmeetings81669039
      - MeetingApiMeetingAuthApimeetingsGETD85B8C5C
      - MeetingApiMeetingAuthApimeetingsOPTIONSC57965D9
      - MeetingApiMeetingAuthApimeetings399936EF
      - MeetingApiMeetingAuthApiOPTIONS8C58F5A0
      - MeetingApiMeetingAuthApiuploadOPTIONS23415514
      - MeetingApiMeetingAuthApiuploadPOSTApiPermissionSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BPOSTupload8F12CDAB
      - MeetingApiMeetingAuthApiuploadPOSTApiPermissionTestSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BPOSTupload6BAA258E
      - MeetingApiMeetingAuthApiuploadPOST94389151
      - MeetingApiMeetingAuthApiuploadCD3A3EA9
      - MeetingApiMeetingAuthApiuserscreateOPTIONS66099A80
      - MeetingApiMeetingAuthApiuserscreatePOSTApiPermissionSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BPOSTuserscreate49382053
      - MeetingApiMeetingAuthApiuserscreatePOSTApiPermissionTestSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BPOSTuserscreateBD51C245
      - MeetingApiMeetingAuthApiuserscreatePOST3DC96AFE
      - MeetingApiMeetingAuthApiuserscreate02B62D39
      - MeetingApiMeetingAuthApiusersOPTIONSD3E52D98
      - MeetingApiMeetingAuthApiusersF967C2CD
      - MeetingApiMeetingAuthApiuserssetupOPTIONSBF8806A0
      - MeetingApiMeetingAuthApiuserssetupPOSTApiPermissionSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BPOSTuserssetup233FE5D7
      - MeetingApiMeetingAuthApiuserssetupPOSTApiPermissionTestSemanticLighthouseStackv3MeetingApiMeetingAuthApi4C43BB2BPOSTuserssetup0B469AA4
      - MeetingApiMeetingAuthApiuserssetupPOSTEEA23D3E
      - MeetingApiMeetingAuthApiuserssetupC4DC3196
      - MeetingApiMeetingAuthApiDeploymentB234B3FC5b1ab84c1d561985227c378426ed5153
      - MeetingApiMeetingAuthApiDeploymentStageprod66E6B130
      - MeetingApiMeetingAuthApi91B1C27C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Frontend/FrontendBuild/Resource
  FrontendTriggerCodeBuild83999077:
    Type: Custom::AWS
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - AWS679f53fac002430cb0da5b7982bd22872D164C4C
          - Arn
      Create:
        Fn::Join:
          - ""
          - - '{"outputPaths":["BuildId"],"service":"CodeBuild","action":"startBuild","parameters":{"projectName":"'
            - Ref: FrontendFrontendBuild5BFE8AE0
            - '"},"physicalResourceId":{"id":"trigger-codebuild-1752795592939"}}'
      Update:
        Fn::Join:
          - ""
          - - '{"outputPaths":["BuildId"],"service":"CodeBuild","action":"startBuild","parameters":{"projectName":"'
            - Ref: FrontendFrontendBuild5BFE8AE0
            - '"},"physicalResourceId":{"id":"trigger-codebuild-1752795592939"}}'
      InstallLatestAwsSdk: false
    DependsOn:
      - FrontendFrontendBuild5BFE8AE0
      - FrontendFrontendBuildRoleDefaultPolicy75BAEB47
      - FrontendFrontendBuildRoleC7BFCAC8
      - FrontendTriggerCodeBuildCustomResourcePolicy1883B62D
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Frontend/TriggerCodeBuild/Resource/Default
  FrontendTriggerCodeBuildCustomResourcePolicy1883B62D:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: codebuild:StartBuild
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - FrontendFrontendBuild5BFE8AE0
                - Arn
        Version: "2012-10-17"
      PolicyName: FrontendTriggerCodeBuildCustomResourcePolicy1883B62D
      Roles:
        - Ref: AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2
    DependsOn:
      - FrontendFrontendBuild5BFE8AE0
      - FrontendFrontendBuildRoleDefaultPolicy75BAEB47
      - FrontendFrontendBuildRoleC7BFCAC8
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Frontend/TriggerCodeBuild/CustomResourcePolicy/Resource
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
                    - /*
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - FrontendFrontendSourceBucket0C00C963
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - FrontendFrontendSourceBucket0C00C963
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
      Roles:
        - Ref: CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 9a1fcb4a7ecba81ad70e9d3fb241f6794497da945dae5f25924e4dd002b65f2d.zip
      Environment:
        Variables:
          AWS_CA_BUNDLE: /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
      Handler: index.handler
      Layers:
        - Ref: FrontendFrontendSourceDeploymentAwsCliLayer04D8FFE7
      LoggingConfig:
        LogGroup:
          Ref: FrontendFrontendSourceDeploymentLogGroupC3AC9817
      Role:
        Fn::GetAtt:
          - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
          - Arn
      Runtime: python3.11
      Timeout: 900
    DependsOn:
      - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
      - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource
      aws:asset:path: asset.9a1fcb4a7ecba81ad70e9d3fb241f6794497da945dae5f25924e4dd002b65f2d
      aws:asset:is-bundled: false
      aws:asset:property: Code
  AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource
  AWS679f53fac002430cb0da5b7982bd22872D164C4C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: c099eb4e32cbf1c3da9c45a3b280efe2bed38d27d74aa72702b67d86d1b52354.zip
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2
          - Arn
      Runtime: nodejs22.x
      Timeout: 120
    DependsOn:
      - AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/AWS679f53fac002430cb0da5b7982bd2287/Resource
      aws:asset:path: asset.c099eb4e32cbf1c3da9c45a3b280efe2bed38d27d74aa72702b67d86d1b52354
      aws:asset:is-bundled: false
      aws:asset:property: Code
  AWS679f53fac002430cb0da5b7982bd2287LogGroup449FB7C2:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: AWS679f53fac002430cb0da5b7982bd22872D164C4C
      RetentionInDays: 731
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/AWS679f53fac002430cb0da5b7982bd2287/LogGroup/Resource
  MeetingProcessorIntegrationPopulateAIConfigLambdaServiceRoleB9D1D515:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/PopulateAIConfigLambda/ServiceRole/Resource
  MeetingProcessorIntegrationPopulateAIConfigLambdaServiceRoleDefaultPolicy621282BB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DataResourcesSystemConfigTableCCF6C008
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: MeetingProcessorIntegrationPopulateAIConfigLambdaServiceRoleDefaultPolicy621282BB
      Roles:
        - Ref: MeetingProcessorIntegrationPopulateAIConfigLambdaServiceRoleB9D1D515
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/PopulateAIConfigLambda/ServiceRole/DefaultPolicy/Resource
  MeetingProcessorIntegrationPopulateAIConfigLambdaB1F295BC:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: "

          \        const { DynamoDBClient, BatchWriteItemCommand } = require('@aws-sdk/client-dynamodb');

          \        const https = require('https');

          \        const url = require('url');

          \       \

          \        const sendResponse = async (event, context, responseStatus, responseData = {}) => {

          \          const responseBody = JSON.stringify({

          \            Status: responseStatus,

          \            Reason: 'See CloudWatch Log Stream: ' + context.logStreamName,

          \            PhysicalResourceId: 'populate-ai-config',

          \            StackId: event.StackId,

          \            RequestId: event.RequestId,

          \            LogicalResourceId: event.LogicalResourceId,

          \            Data: responseData

          \          });

          \         \

          \          const parsedUrl = url.parse(event.ResponseURL);

          \          const options = {

          \            hostname: parsedUrl.hostname,

          \            port: 443,

          \            path: parsedUrl.path,

          \            method: 'PUT',

          \            headers: {

          \              'content-type': '',

          \              'content-length': responseBody.length

          \            }

          \          };

          \         \

          \          return new Promise((resolve, reject) => {

          \            const request = https.request(options, (response) => {

          \              console.log('Status code: ' + response.statusCode);

          \              console.log('Status message: ' + response.statusMessage);

          \              resolve();

          \            });

          \           \

          \            request.on('error', (error) => {

          \              console.log('send(..) failed executing https.request(..): ' + error);

          \              reject(error);

          \            });

          \           \

          \            request.write(responseBody);

          \            request.end();

          \          });

          \        };

          \       \

          \        exports.handler = async (event, context) => {

          \          console.log('Event:', JSON.stringify(event));

          \         \

          \          try {

          \            if (event.RequestType === 'Delete') {

          \              console.log('Delete request - no action needed');

          \              await sendResponse(event, context, 'SUCCESS');

          \              return;

          \            }

          \           \

          \            const dynamodb = new DynamoDBClient({});

          \            const tableName = process.env.TABLE_NAME;

          \           \

          \            const configItems = [

          \              // Transcript Analysis Configuration

          \              {

          \                configKey: 'transcript_model_id',

          \                configValue: 'us.anthropic.claude-3-7-sonnet-20250219-v1:0',

          \                description: 'AI model for transcript analysis',

          \                category: 'transcript_analysis'

          \              },

          \              {

          \                configKey: 'transcript_max_tokens',

          \                configValue: '8000',

          \                description: 'Maximum tokens for transcript analysis',

          \                category: 'transcript_analysis'

          \              },

          \              {

          \                configKey: 'transcript_temperature',

          \                configValue: '0.2',

          \                description: 'Temperature for transcript analysis',

          \                category: 'transcript_analysis'

          \              },

          \             \

          \              // Agenda Analysis Configuration

          \              {

          \                configKey: 'agenda_model_id',

          \                configValue: 'us.anthropic.claude-sonnet-4-20250514-v1:0',

          \                description: 'AI model for agenda analysis',

          \                category: 'agenda_analysis'

          \              },

          \              {

          \                configKey: 'agenda_max_tokens',

          \                configValue: '65535',

          \                description: 'Maximum tokens for agenda analysis',

          \                category: 'agenda_analysis'

          \              },

          \              {

          \                configKey: 'agenda_temperature',

          \                configValue: '0.1',

          \                description: 'Temperature for agenda analysis',

          \                category: 'agenda_analysis'

          \              },

          \             \

          \              // Video Processing Configuration

          \              {

          \                configKey: 'video_chunk_duration_hours',

          \                configValue: '4',

          \                description: 'Duration threshold for video chunking',

          \                category: 'video_processing'

          \              },

          \              {

          \                configKey: 'mediaconvert_queue',

          \                configValue: 'Default',

          \                description: 'MediaConvert queue name',

          \                category: 'video_processing'

          \              },

          \             \

          \              // Email Configuration

          \              {

          \                configKey: 'presigned_url_expiration_days',

          \                configValue: '7',

          \                description: 'Presigned URL expiration in days',

          \                category: 'email_notifications'

          \              }

          \            ];

          \           \

          \            // Create batch write items

          \            const requests = configItems.map(item => ({

          \              PutRequest: {

          \                Item: {

          \                  configKey: { S: item.configKey },

          \                  configValue: { S: item.configValue },

          \                  description: { S: item.description },

          \                  category: { S: item.category },

          \                  createdAt: { S: new Date().toISOString() },

          \                  updatedAt: { S: new Date().toISOString() }

          \                }

          \              }

          \            }));

          \           \

          \            // Write items in batches of 25 (DynamoDB limit)

          \            for (let i = 0; i < requests.length; i += 25) {

          \              const batch = requests.slice(i, i + 25);

          \              await dynamodb.send(new BatchWriteItemCommand({

          \                RequestItems: {

          \                  [tableName]: batch

          \                }

          \              }));

          \            }

          \           \

          \            console.log('AI configuration populated successfully');

          \            await sendResponse(event, context, 'SUCCESS', { ItemsCreated: configItems.length });

          \           \

          \          } catch (error) {

          \            console.error('Error populating AI config:', error);

          \            await sendResponse(event, context, 'FAILED', { Error: error.message });

          \          }

          \        };

          \      "
      Environment:
        Variables:
          TABLE_NAME:
            Ref: DataResourcesSystemConfigTableCCF6C008
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - MeetingProcessorIntegrationPopulateAIConfigLambdaServiceRoleB9D1D515
          - Arn
      Runtime: nodejs18.x
      Timeout: 120
    DependsOn:
      - MeetingProcessorIntegrationPopulateAIConfigLambdaServiceRoleDefaultPolicy621282BB
      - MeetingProcessorIntegrationPopulateAIConfigLambdaServiceRoleB9D1D515
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/PopulateAIConfigLambda/Resource
  MeetingProcessorIntegrationPopulateAIConfigLambdaLogGroup970280AF:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: MeetingProcessorIntegrationPopulateAIConfigLambdaB1F295BC
      RetentionInDays: 731
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/PopulateAIConfigLambda/LogGroup/Resource
  MeetingProcessorIntegrationPopulateAIConfigResourceDF396AE8:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - MeetingProcessorIntegrationPopulateAIConfigLambdaB1F295BC
          - Arn
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/PopulateAIConfigResource/Default
  MeetingProcessorIntegrationVideoAnalysisLayer57D1BE94:
    Type: AWS::Lambda::LayerVersion
    Properties:
      CompatibleRuntimes:
        - python3.12
      Content:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 05a188071e3b65a75fa36710110ed76d1d6b218840e239fc0d5cc287c799360d.zip
      Description: PyMediaInfo library for video file analysis and duration extraction
      LayerName: semantic-lighthouse-v3-795592-video-analysis
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/VideoAnalysisLayer/Resource
      aws:asset:path: asset.05a188071e3b65a75fa36710110ed76d1d6b218840e239fc0d5cc287c799360d
      aws:asset:is-bundled: false
      aws:asset:property: Content
  MeetingProcessorIntegrationPdfGenerationLayer8DAC1B0A:
    Type: AWS::Lambda::LayerVersion
    Properties:
      CompatibleRuntimes:
        - python3.12
      Content:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: f612a9edabb69c8a471a984b8f909316afaf313887b2e07cf7ad120cac49a984.zip
      Description: PDF generation tools with fonts for converting HTML meeting minutes to PDF
      LayerName: semantic-lighthouse-v3-795592-pdf-generation-tools
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/PdfGenerationLayer/Resource
      aws:asset:path: asset.f612a9edabb69c8a471a984b8f909316afaf313887b2e07cf7ad120cac49a984
      aws:asset:is-bundled: false
      aws:asset:property: Content
  MeetingProcessorIntegrationMediaConvertServiceRole71D5F3DE:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: mediaconvert.amazonaws.com
        Version: "2012-10-17"
      Description: Service role for MediaConvert to access S3 buckets
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - s3:DeleteObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                Effect: Allow
                Resource:
                  Fn::Join:
                    - ""
                    - - Fn::GetAtt:
                          - DataResourcesMeetingsBucket978E0EC1
                          - Arn
                      - /*
              - Action:
                  - s3:GetBucketLocation
                  - s3:ListBucket
                Effect: Allow
                Resource:
                  Fn::GetAtt:
                    - DataResourcesMeetingsBucket978E0EC1
                    - Arn
            Version: "2012-10-17"
          PolicyName: S3Access
      RoleName: semantic-lighthouse-v3-795592-mediaconvert-service-role
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/MediaConvertServiceRole/Resource
  MeetingProcessorIntegrationVideoToAudioConverterServiceRole07666533:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/VideoToAudioConverter/ServiceRole/Resource
  MeetingProcessorIntegrationVideoToAudioConverterServiceRoleDefaultPolicyD72EA4A7:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DataResourcesMeetingsBucket978E0EC1
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DataResourcesMeetingsBucket978E0EC1
                        - Arn
                    - /*
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DataResourcesMeetingsTableB4BEF5CF
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DataResourcesMeetingsTableB4BEF5CF
                        - Arn
                    - /index/*
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DataResourcesSystemConfigTableCCF6C008
                  - Arn
              - Ref: AWS::NoValue
          - Action:
              - mediaconvert:*
              - transcribe:*
            Effect: Allow
            Resource: "*"
          - Action: iam:PassRole
            Condition:
              StringEquals:
                iam:PassedToService: mediaconvert.amazonaws.com
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: MeetingProcessorIntegrationVideoToAudioConverterServiceRoleDefaultPolicyD72EA4A7
      Roles:
        - Ref: MeetingProcessorIntegrationVideoToAudioConverterServiceRole07666533
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/VideoToAudioConverter/ServiceRole/DefaultPolicy/Resource
  MeetingProcessorIntegrationVideoToAudioConverterE056AE87:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 10b88ccea4d4d2669ee3ba41f95d062e3fbe8581143980253777e26fecb0a42f.zip
      Environment:
        Variables:
          BUCKET_NAME:
            Ref: DataResourcesMeetingsBucket978E0EC1
          OUTPUT_BUCKET:
            Ref: DataResourcesMeetingsBucket978E0EC1
          MEETINGS_TABLE_NAME:
            Ref: DataResourcesMeetingsTableB4BEF5CF
          SYSTEM_CONFIG_TABLE_NAME:
            Ref: DataResourcesSystemConfigTableCCF6C008
          MEDIACONVERT_ROLE_ARN:
            Fn::GetAtt:
              - MeetingProcessorIntegrationMediaConvertServiceRole71D5F3DE
              - Arn
          MEDIACONVERT_QUEUE_ARN:
            Fn::Join:
              - ""
              - - "arn:aws:mediaconvert:"
                - Ref: AWS::Region
                - ":"
                - Ref: AWS::AccountId
                - :queues/Default
      FunctionName: semantic-lighthouse-v3-795592-video-to-audio-converter
      Handler: handler.lambda_handler
      Layers:
        - Ref: MeetingProcessorIntegrationVideoAnalysisLayer57D1BE94
      MemorySize: 2048
      Role:
        Fn::GetAtt:
          - MeetingProcessorIntegrationVideoToAudioConverterServiceRole07666533
          - Arn
      Runtime: python3.12
      Timeout: 900
    DependsOn:
      - MeetingProcessorIntegrationVideoToAudioConverterServiceRoleDefaultPolicyD72EA4A7
      - MeetingProcessorIntegrationVideoToAudioConverterServiceRole07666533
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/VideoToAudioConverter/Resource
      aws:asset:path: asset.10b88ccea4d4d2669ee3ba41f95d062e3fbe8581143980253777e26fecb0a42f
      aws:asset:is-bundled: false
      aws:asset:property: Code
  MeetingProcessorIntegrationVideoToAudioConverterLogGroupCFBF7A03:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: MeetingProcessorIntegrationVideoToAudioConverterE056AE87
      RetentionInDays: 731
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/VideoToAudioConverter/LogGroup/Resource
  MeetingProcessorIntegrationProcessingStatusMonitorServiceRole8A5EF38A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/ProcessingStatusMonitor/ServiceRole/Resource
  MeetingProcessorIntegrationProcessingStatusMonitorServiceRoleDefaultPolicy7AF81C3F:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DataResourcesMeetingsBucket978E0EC1
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DataResourcesMeetingsBucket978E0EC1
                        - Arn
                    - /*
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DataResourcesMeetingsTableB4BEF5CF
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DataResourcesMeetingsTableB4BEF5CF
                        - Arn
                    - /index/*
          - Action:
              - mediaconvert:*
              - transcribe:*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: MeetingProcessorIntegrationProcessingStatusMonitorServiceRoleDefaultPolicy7AF81C3F
      Roles:
        - Ref: MeetingProcessorIntegrationProcessingStatusMonitorServiceRole8A5EF38A
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/ProcessingStatusMonitor/ServiceRole/DefaultPolicy/Resource
  MeetingProcessorIntegrationProcessingStatusMonitor7E617749:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 22bfd5f0ef9cd95fedfc2a48a4c3a1b34661fb5eab675533669a253ffb4e59c1.zip
      Environment:
        Variables:
          BUCKET_NAME:
            Ref: DataResourcesMeetingsBucket978E0EC1
          MEETINGS_TABLE_NAME:
            Ref: DataResourcesMeetingsTableB4BEF5CF
      FunctionName: semantic-lighthouse-v3-795592-processing-status-monitor
      Handler: handler.lambda_handler
      MemorySize: 512
      Role:
        Fn::GetAtt:
          - MeetingProcessorIntegrationProcessingStatusMonitorServiceRole8A5EF38A
          - Arn
      Runtime: python3.12
      Timeout: 300
    DependsOn:
      - MeetingProcessorIntegrationProcessingStatusMonitorServiceRoleDefaultPolicy7AF81C3F
      - MeetingProcessorIntegrationProcessingStatusMonitorServiceRole8A5EF38A
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/ProcessingStatusMonitor/Resource
      aws:asset:path: asset.22bfd5f0ef9cd95fedfc2a48a4c3a1b34661fb5eab675533669a253ffb4e59c1
      aws:asset:is-bundled: false
      aws:asset:property: Code
  MeetingProcessorIntegrationProcessingStatusMonitorLogGroupCC598EA1:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: MeetingProcessorIntegrationProcessingStatusMonitor7E617749
      RetentionInDays: 731
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/ProcessingStatusMonitor/LogGroup/Resource
  MeetingProcessorIntegrationAiMeetingAnalyzerServiceRole0B56101C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/AiMeetingAnalyzer/ServiceRole/Resource
  MeetingProcessorIntegrationAiMeetingAnalyzerServiceRoleDefaultPolicyB722C12E:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DataResourcesMeetingsBucket978E0EC1
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DataResourcesMeetingsBucket978E0EC1
                        - Arn
                    - /*
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DataResourcesMeetingsTableB4BEF5CF
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DataResourcesMeetingsTableB4BEF5CF
                        - Arn
                    - /index/*
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DataResourcesSystemConfigTableCCF6C008
                  - Arn
              - Ref: AWS::NoValue
          - Action: bedrock:*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: MeetingProcessorIntegrationAiMeetingAnalyzerServiceRoleDefaultPolicyB722C12E
      Roles:
        - Ref: MeetingProcessorIntegrationAiMeetingAnalyzerServiceRole0B56101C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/AiMeetingAnalyzer/ServiceRole/DefaultPolicy/Resource
  MeetingProcessorIntegrationAiMeetingAnalyzer85F11DA9:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 84af53efe49926cd694e5ee32fe35c7a9a48f922bf1f6bc4324b5ed56d93e3dc.zip
      Environment:
        Variables:
          S3_BUCKET:
            Ref: DataResourcesMeetingsBucket978E0EC1
          MEETINGS_TABLE_NAME:
            Ref: DataResourcesMeetingsTableB4BEF5CF
          SYSTEM_CONFIG_TABLE_NAME:
            Ref: DataResourcesSystemConfigTableCCF6C008
          CLOUDFRONT_DOMAIN_NAME:
            Fn::GetAtt:
              - DataResourcesVideosDistributionCB495C72
              - DomainName
          FRONTEND_DOMAIN_NAME:
            Fn::GetAtt:
              - FrontendFrontendDistribution0FCC69EF
              - DomainName
          TRANSCRIPT_MODEL_ID: us.anthropic.claude-3-7-sonnet-20250219-v1:0
          TRANSCRIPT_MAX_TOKENS: "8000"
          TRANSCRIPT_TEMPERATURE: "0.2"
          TRANSCRIPT_PROMPT_TEMPLATE: |
            Go through this transcript for a board meeting. The context of the board meeting should be clear from the agenda and the transcript.
            I want you to go through this and look for the segments where there is a vote taking place or where there is a topic transition.
            Refer to the agenda for more info:

            AGENDA:
            {agenda}

            TRANSCRIPT:
            {formatted_transcript}

            I want you to reference specific segments for topic transitions, segments where a vote takes place, which segments refer to which agenda item, etc. Please also mention what each agenda item is about and what the vote was about. Also include what discussions were had about each agenda item and other information. Be very thorough in the discussion of each agenda item and the vote. Be sure to include what things were discussed, debated etc in detail.
            Please be EXTREMELY comprehensive and specific in your analysis, always referencing segment IDs when discussing parts of the transcript. For the references i want you to use the format [seg_0] or [seg_0-55] if using a range of segments.
          FALLBACK_AGENDA_TEXT: |-
            GENERAL MEETING AGENDA

            This is a standard school board meeting. Please analyze the transcript for:

            1. Opening remarks and introductions
            2. Review of previous meeting minutes
            3. Status updates and reports
            4. New business discussions
            5. Action items and assignments
            6. Next meeting scheduling
            7. Closing remarks

            Key participants and their roles should be identified from the discussion context.
      FunctionName: semantic-lighthouse-v3-795592-ai-meeting-analyzer
      Handler: handler.lambda_handler
      MemorySize: 3008
      Role:
        Fn::GetAtt:
          - MeetingProcessorIntegrationAiMeetingAnalyzerServiceRole0B56101C
          - Arn
      Runtime: python3.12
      Timeout: 900
    DependsOn:
      - MeetingProcessorIntegrationAiMeetingAnalyzerServiceRoleDefaultPolicyB722C12E
      - MeetingProcessorIntegrationAiMeetingAnalyzerServiceRole0B56101C
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/AiMeetingAnalyzer/Resource
      aws:asset:path: asset.84af53efe49926cd694e5ee32fe35c7a9a48f922bf1f6bc4324b5ed56d93e3dc
      aws:asset:is-bundled: true
      aws:asset:property: Code
  MeetingProcessorIntegrationAiMeetingAnalyzerLogGroupE308636F:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: MeetingProcessorIntegrationAiMeetingAnalyzer85F11DA9
      RetentionInDays: 731
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/AiMeetingAnalyzer/LogGroup/Resource
  MeetingProcessorIntegrationDocumentPdfGeneratorServiceRole909F682E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/DocumentPdfGenerator/ServiceRole/Resource
  MeetingProcessorIntegrationDocumentPdfGeneratorServiceRoleDefaultPolicy83C92981:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DataResourcesMeetingsBucket978E0EC1
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DataResourcesMeetingsBucket978E0EC1
                        - Arn
                    - /*
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DataResourcesMeetingsTableB4BEF5CF
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DataResourcesMeetingsTableB4BEF5CF
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: MeetingProcessorIntegrationDocumentPdfGeneratorServiceRoleDefaultPolicy83C92981
      Roles:
        - Ref: MeetingProcessorIntegrationDocumentPdfGeneratorServiceRole909F682E
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/DocumentPdfGenerator/ServiceRole/DefaultPolicy/Resource
  MeetingProcessorIntegrationDocumentPdfGeneratorC7E88E19:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 75769675c0339262936de0350616c48fde6c70edb6214b293471e6fe9f2638cc.zip
      Environment:
        Variables:
          BUCKET_NAME:
            Ref: DataResourcesMeetingsBucket978E0EC1
          MEETINGS_TABLE_NAME:
            Ref: DataResourcesMeetingsTableB4BEF5CF
          LD_LIBRARY_PATH: /opt/lib
          FONTCONFIG_PATH: /opt/fonts
      FunctionName: semantic-lighthouse-v3-795592-document-pdf-generator
      Handler: handler.lambda_handler
      Layers:
        - Ref: MeetingProcessorIntegrationPdfGenerationLayer8DAC1B0A
      MemorySize: 1536
      Role:
        Fn::GetAtt:
          - MeetingProcessorIntegrationDocumentPdfGeneratorServiceRole909F682E
          - Arn
      Runtime: python3.12
      Timeout: 300
    DependsOn:
      - MeetingProcessorIntegrationDocumentPdfGeneratorServiceRoleDefaultPolicy83C92981
      - MeetingProcessorIntegrationDocumentPdfGeneratorServiceRole909F682E
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/DocumentPdfGenerator/Resource
      aws:asset:path: asset.75769675c0339262936de0350616c48fde6c70edb6214b293471e6fe9f2638cc
      aws:asset:is-bundled: false
      aws:asset:property: Code
  MeetingProcessorIntegrationDocumentPdfGeneratorLogGroup5E1D94CE:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: MeetingProcessorIntegrationDocumentPdfGeneratorC7E88E19
      RetentionInDays: 731
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/DocumentPdfGenerator/LogGroup/Resource
  MeetingProcessorIntegrationNotificationSenderServiceRole46F86103:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/NotificationSender/ServiceRole/Resource
  MeetingProcessorIntegrationNotificationSenderServiceRoleDefaultPolicy7B7F7AED:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DataResourcesMeetingsBucket978E0EC1
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DataResourcesMeetingsBucket978E0EC1
                        - Arn
                    - /*
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DataResourcesMeetingsTableB4BEF5CF
                  - Arn
              - Fn::GetAtt:
                  - DataResourcesUserPreferencesTableC9E14B7D
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DataResourcesMeetingsTableB4BEF5CF
                        - Arn
                    - /index/*
              - Ref: AWS::NoValue
          - Action: sns:Publish
            Effect: Allow
            Resource: arn:aws:sns:*:*:semantic-lighthouse-user-*
        Version: "2012-10-17"
      PolicyName: MeetingProcessorIntegrationNotificationSenderServiceRoleDefaultPolicy7B7F7AED
      Roles:
        - Ref: MeetingProcessorIntegrationNotificationSenderServiceRole46F86103
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/NotificationSender/ServiceRole/DefaultPolicy/Resource
  MeetingProcessorIntegrationNotificationSender882C3342:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: b35cd0f450febb944b1caff4f7656d94a727f5544335afe212c4e9a2031775c3.zip
      Environment:
        Variables:
          MEETINGS_TABLE_NAME:
            Ref: DataResourcesMeetingsTableB4BEF5CF
          USER_PREFERENCES_TABLE_NAME:
            Ref: DataResourcesUserPreferencesTableC9E14B7D
      FunctionName: semantic-lighthouse-v3-795592-notification-sender
      Handler: handler.lambda_handler
      MemorySize: 256
      Role:
        Fn::GetAtt:
          - MeetingProcessorIntegrationNotificationSenderServiceRole46F86103
          - Arn
      Runtime: python3.12
      Timeout: 60
    DependsOn:
      - MeetingProcessorIntegrationNotificationSenderServiceRoleDefaultPolicy7B7F7AED
      - MeetingProcessorIntegrationNotificationSenderServiceRole46F86103
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/NotificationSender/Resource
      aws:asset:path: asset.b35cd0f450febb944b1caff4f7656d94a727f5544335afe212c4e9a2031775c3
      aws:asset:is-bundled: false
      aws:asset:property: Code
  MeetingProcessorIntegrationNotificationSenderLogGroupACB5DBE4:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: MeetingProcessorIntegrationNotificationSender882C3342
      RetentionInDays: 731
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/NotificationSender/LogGroup/Resource
  MeetingProcessorIntegrationMeetingProcessingWorkflowRole53AFE4A1:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: states.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/MeetingProcessingWorkflow/Role/Resource
  MeetingProcessorIntegrationMeetingProcessingWorkflowRoleDefaultPolicyD815DF7C:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: transcribe:*
            Effect: Allow
            Resource: "*"
          - Action:
              - s3:DeleteObject
              - s3:GetObject
              - s3:PutObject
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - DataResourcesMeetingsBucket978E0EC1
                      - Arn
                  - /*
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - MeetingProcessorIntegrationAiMeetingAnalyzer85F11DA9
                  - Arn
              - Fn::GetAtt:
                  - MeetingProcessorIntegrationDocumentPdfGeneratorC7E88E19
                  - Arn
              - Fn::GetAtt:
                  - MeetingProcessorIntegrationNotificationSender882C3342
                  - Arn
              - Fn::GetAtt:
                  - MeetingProcessorIntegrationProcessingStatusMonitor7E617749
                  - Arn
              - Fn::GetAtt:
                  - MeetingProcessorIntegrationVideoToAudioConverterE056AE87
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - MeetingProcessorIntegrationAiMeetingAnalyzer85F11DA9
                        - Arn
                    - :*
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - MeetingProcessorIntegrationDocumentPdfGeneratorC7E88E19
                        - Arn
                    - :*
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - MeetingProcessorIntegrationNotificationSender882C3342
                        - Arn
                    - :*
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - MeetingProcessorIntegrationProcessingStatusMonitor7E617749
                        - Arn
                    - :*
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - MeetingProcessorIntegrationVideoToAudioConverterE056AE87
                        - Arn
                    - :*
        Version: "2012-10-17"
      PolicyName: MeetingProcessorIntegrationMeetingProcessingWorkflowRoleDefaultPolicyD815DF7C
      Roles:
        - Ref: MeetingProcessorIntegrationMeetingProcessingWorkflowRole53AFE4A1
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/MeetingProcessingWorkflow/Role/DefaultPolicy/Resource
  MeetingProcessorIntegrationMeetingProcessingWorkflow47CF2964:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      DefinitionString:
        Fn::Join:
          - ""
          - - |-
              {
                "Comment": "A state machine that converts videos using MediaConvert (with chunking support), transcribes all audio chunks, and processes the merged result.",
                "StartAt": "ProcessWithMediaConvert",
                "States": {
                  "ProcessWithMediaConvert": {
                    "Type": "Task",
                    "Resource": "arn:aws:states:::lambda:invoke",
                    "Parameters": {
                      "FunctionName": "
            - Fn::GetAtt:
                - MeetingProcessorIntegrationVideoToAudioConverterE056AE87
                - Arn
            - |-
              ",
                      "Payload": {
                        "inputBucket.$": "$.detail.bucket.name",
                        "inputKey.$": "$.detail.object.key",
                        "outputBucket": "
            - Ref: DataResourcesMeetingsBucket978E0EC1
            - |-
              ",
                        "outputKeyPrefix": "converted/"
                      }
                    },
                    "ResultPath": "$.mediaConvertResult",
                    "Next": "CheckJobCount",
                    "Retry": [
                      {
                        "ErrorEquals": ["States.TaskFailed"],
                        "IntervalSeconds": 30,
                        "MaxAttempts": 3,
                        "BackoffRate": 2
                      }
                    ],
                    "Catch": [
                      {
                        "ErrorEquals": ["States.ALL"],
                        "Next": "MediaConvertFailed"
                      }
                    ]
                  },
                  "CheckJobCount": {
                    "Type": "Choice",
                    "Choices": [
                      {
                        "Variable": "$.mediaConvertResult.Payload.job_ids",
                        "IsPresent": true,
                        "Next": "HasJobs"
                      }
                    ],
                    "Default": "MediaConvertFailed"
                  },
                  "HasJobs": {
                    "Type": "Choice",
                    "Choices": [
                      {
                        "And": [
                          {
                            "Variable": "$.mediaConvertResult.Payload.job_ids",
                            "IsPresent": true
                          },
                          {
                            "Variable": "$.mediaConvertResult.Payload.job_ids[0]",
                            "IsPresent": true
                          }
                        ],
                        "Next": "WaitForMediaConvert"
                      }
                    ],
                    "Default": "MediaConvertFailed"
                  },
                  "WaitForMediaConvert": {
                    "Type": "Wait",
                    "Seconds": 120,
                    "Next": "CheckAllMediaConvertJobsWithLambda"
                  },
                  "CheckAllMediaConvertJobsWithLambda": {
                    "Type": "Task",
                    "Resource": "arn:aws:states:::lambda:invoke",
                    "Parameters": {
                      "FunctionName": "
            - Fn::GetAtt:
                - MeetingProcessorIntegrationProcessingStatusMonitor7E617749
                - Arn
            - |-
              ",
                      "Payload": {
                        "job_ids.$": "$.mediaConvertResult.Payload.job_ids"
                      }
                    },
                    "ResultPath": "$.mediaConvertJobsCheck",
                    "Next": "EvaluateMediaConvertResults",
                    "Retry": [
                      {
                        "ErrorEquals": ["States.TaskFailed"],
                        "IntervalSeconds": 30,
                        "MaxAttempts": 3,
                        "BackoffRate": 2
                      }
                    ],
                    "Catch": [
                      {
                        "ErrorEquals": ["States.ALL"],
                        "Next": "MediaConvertFailed"
                      }
                    ]
                  },
                  "EvaluateMediaConvertResults": {
                    "Type": "Choice",
                    "Choices": [
                      {
                        "Variable": "$.mediaConvertJobsCheck.Payload.anyFailed",
                        "BooleanEquals": true,
                        "Next": "MediaConvertFailed"
                      },
                      {
                        "Variable": "$.mediaConvertJobsCheck.Payload.allComplete",
                        "BooleanEquals": true,
                        "Next": "VerifyAllAudioFiles"
                      }
                    ],
                    "Default": "WaitLongerForMediaConvert"
                  },
                  "WaitLongerForMediaConvert": {
                    "Type": "Wait",
                    "Seconds": 180,
                    "Next": "CheckAllMediaConvertJobsWithLambda"
                  },
                  "VerifyAllAudioFiles": {
                    "Type": "Map",
                    "ItemsPath": "$.mediaConvertResult.Payload.audioOutputUris",
                    "MaxConcurrency": 5,
                    "Iterator": {
                      "StartAt": "VerifySingleAudioFile",
                      "States": {
                        "VerifySingleAudioFile": {
                          "Type": "Task",
                          "Resource": "arn:aws:states:::lambda:invoke",
                          "Parameters": {
                            "FunctionName": "
            - Fn::GetAtt:
                - MeetingProcessorIntegrationProcessingStatusMonitor7E617749
                - Arn
            - |-
              ",
                            "Payload": {
                              "s3_uri.$": "$"
                            }
                          },
                          "Next": "CheckAudioExists",
                          "Retry": [
                            {
                              "ErrorEquals": ["States.TaskFailed"],
                              "IntervalSeconds": 15,
                              "MaxAttempts": 8,
                              "BackoffRate": 2
                            }
                          ]
                        },
                        "CheckAudioExists": {
                          "Type": "Choice",
                          "Choices": [
                            {
                              "Variable": "$.Payload.exists",
                              "BooleanEquals": true,
                              "Next": "AudioExists"
                            }
                          ],
                          "Default": "AudioMissing"
                        },
                        "AudioExists": {
                          "Type": "Pass",
                          "Result": {
                            "status": "EXISTS"
                          },
                          "End": true
                        },
                        "AudioMissing": {
                          "Type": "Fail",
                          "Cause": "Audio File Not Found",
                          "Error": "One or more audio files generated by MediaConvert could not be found in S3."
                        }
                      }
                    },
                    "ResultPath": "$.audioVerificationResults",
                    "Next": "StartAllTranscriptionJobs",
                    "Catch": [
                      {
                        "ErrorEquals": ["States.ALL"],
                        "Next": "AudioFileNotFound"
                      }
                    ]
                  },
                  "StartAllTranscriptionJobs": {
                    "Type": "Map",
                    "ItemsPath": "$.mediaConvertResult.Payload.audioOutputUris",
                    "MaxConcurrency": 5,
                    "Iterator": {
                      "StartAt": "StartSingleTranscriptionJob",
                      "States": {
                        "StartSingleTranscriptionJob": {
                          "Type": "Task",
                          "Resource": "arn:aws:states:::aws-sdk:transcribe:startTranscriptionJob",
                          "Parameters": {
                            "LanguageCode": "en-US",
                            "Media": {
                              "MediaFileUri.$": "$"
                            },
                            "TranscriptionJobName.$": "States.Format('transcribe-{}-{}', $$.Execution.Name, States.UUID())",
                            "OutputBucketName": "
            - Ref: DataResourcesMeetingsBucket978E0EC1
            - |-
              ",
                            "OutputKey": "transcripts/",
                            "Settings": {
                              "ShowSpeakerLabels": true,
                              "MaxSpeakerLabels": 10
                            }
                          },
                          "Next": "WaitForSingleTranscription",
                          "Retry": [
                            {
                              "ErrorEquals": ["States.TaskFailed"],
                              "IntervalSeconds": 30,
                              "MaxAttempts": 3,
                              "BackoffRate": 2
                            }
                          ]
                        },
                        "WaitForSingleTranscription": {
                          "Type": "Wait",
                          "Seconds": 60,
                          "Next": "GetSingleTranscriptionStatus"
                        },
                        "GetSingleTranscriptionStatus": {
                          "Type": "Task",
                          "Resource": "arn:aws:states:::aws-sdk:transcribe:getTranscriptionJob",
                          "Parameters": {
                            "TranscriptionJobName.$": "$.TranscriptionJob.TranscriptionJobName"
                          },
                          "Next": "CheckTranscriptionStatus"
                        },
                        "CheckTranscriptionStatus": {
                          "Type": "Choice",
                          "Choices": [
                            {
                              "Variable": "$.TranscriptionJob.TranscriptionJobStatus",
                              "StringEquals": "COMPLETED",
                              "Next": "TranscriptionComplete"
                            },
                            {
                              "Variable": "$.TranscriptionJob.TranscriptionJobStatus",
                              "StringEquals": "FAILED",
                              "Next": "TranscriptionJobFailed"
                            }
                          ],
                          "Default": "WaitForSingleTranscription"
                        },
                        "TranscriptionComplete": {
                          "Type": "Pass",
                          "End": true
                        },
                        "TranscriptionJobFailed": {
                          "Type": "Fail",
                          "Cause": "Transcription Job Failed",
                          "Error": "One or more AWS Transcribe jobs failed to complete."
                        }
                      }
                    },
                    "ResultPath": "$.transcriptionResults",
                    "Next": "CheckForAgenda",
                    "Catch": [
                      {
                        "ErrorEquals": ["States.ALL"],
                        "Next": "TranscriptionFailed"
                      }
                    ]
                  },
                  "CheckForAgenda": {
                    "Type": "Task",
                    "Resource": "arn:aws:states:::lambda:invoke",
                    "Parameters": {
                      "FunctionName": "
            - Fn::GetAtt:
                - MeetingProcessorIntegrationProcessingStatusMonitor7E617749
                - Arn
            - |-
              ",
                      "Payload": {
                        "check_agenda": true,
                        "video_s3_key.$": "$.detail.object.key"
                      }
                    },
                    "ResultPath": "$.agendaCheck",
                    "Next": "HasAgenda",
                    "Retry": [
                      {
                        "ErrorEquals": ["States.TaskFailed"],
                        "IntervalSeconds": 10,
                        "MaxAttempts": 2,
                        "BackoffRate": 2
                      }
                    ],
                    "Catch": [
                      {
                        "ErrorEquals": ["States.ALL"],
                        "Next": "ProcessAllTranscripts"
                      }
                    ]
                  },
                  "HasAgenda": {
                    "Type": "Choice",
                    "Choices": [
                      {
                        "Variable": "$.agendaCheck.Payload.agenda_exists",
                        "BooleanEquals": true,
                        "Next": "ProcessAllTranscripts"
                      },
                      {
                        "Variable": "$.agendaCheck.Payload.agenda_exists",
                        "BooleanEquals": false,
                        "Next": "WaitForAgenda"
                      }
                    ],
                    "Default": "ProcessAllTranscripts"
                  },
                  "WaitForAgenda": {
                    "Type": "Wait",
                    "Seconds": 60,
                    "Next": "CheckForAgendaRetry1"
                  },
                  "CheckForAgendaRetry1": {
                    "Type": "Task",
                    "Resource": "arn:aws:states:::lambda:invoke",
                    "Parameters": {
                      "FunctionName": "
            - Fn::GetAtt:
                - MeetingProcessorIntegrationProcessingStatusMonitor7E617749
                - Arn
            - |-
              ",
                      "Payload": {
                        "check_agenda": true,
                        "video_s3_key.$": "$.detail.object.key"
                      }
                    },
                    "ResultPath": "$.agendaCheckRetry",
                    "Next": "AgendaFoundAfterWait1",
                    "Retry": [
                      {
                        "ErrorEquals": ["States.TaskFailed"],
                        "IntervalSeconds": 10,
                        "MaxAttempts": 2,
                        "BackoffRate": 2
                      }
                    ],
                    "Catch": [
                      {
                        "ErrorEquals": ["States.ALL"],
                        "Next": "ProcessAllTranscripts"
                      }
                    ]
                  },
                  "AgendaFoundAfterWait1": {
                    "Type": "Choice",
                    "Choices": [
                      {
                        "Variable": "$.agendaCheckRetry.Payload.agenda_exists",
                        "BooleanEquals": true,
                        "Next": "ProcessAllTranscripts"
                      }
                    ],
                    "Default": "WaitForAgenda2"
                  },
                  "WaitForAgenda2": {
                    "Type": "Wait",
                    "Seconds": 60,
                    "Next": "CheckForAgendaRetry2"
                  },
                  "CheckForAgendaRetry2": {
                    "Type": "Task",
                    "Resource": "arn:aws:states:::lambda:invoke",
                    "Parameters": {
                      "FunctionName": "
            - Fn::GetAtt:
                - MeetingProcessorIntegrationProcessingStatusMonitor7E617749
                - Arn
            - |-
              ",
                      "Payload": {
                        "check_agenda": true,
                        "video_s3_key.$": "$.detail.object.key"
                      }
                    },
                    "ResultPath": "$.agendaCheckRetry",
                    "Next": "AgendaFoundAfterWait2",
                    "Retry": [
                      {
                        "ErrorEquals": ["States.TaskFailed"],
                        "IntervalSeconds": 10,
                        "MaxAttempts": 2,
                        "BackoffRate": 2
                      }
                    ],
                    "Catch": [
                      {
                        "ErrorEquals": ["States.ALL"],
                        "Next": "ProcessAllTranscripts"
                      }
                    ]
                  },
                  "AgendaFoundAfterWait2": {
                    "Type": "Choice",
                    "Choices": [
                      {
                        "Variable": "$.agendaCheckRetry.Payload.agenda_exists",
                        "BooleanEquals": true,
                        "Next": "ProcessAllTranscripts"
                      }
                    ],
                    "Default": "WaitForAgenda3"
                  },
                  "WaitForAgenda3": {
                    "Type": "Wait",
                    "Seconds": 60,
                    "Next": "CheckForAgendaRetry3"
                  },
                  "CheckForAgendaRetry3": {
                    "Type": "Task",
                    "Resource": "arn:aws:states:::lambda:invoke",
                    "Parameters": {
                      "FunctionName": "
            - Fn::GetAtt:
                - MeetingProcessorIntegrationProcessingStatusMonitor7E617749
                - Arn
            - |-
              ",
                      "Payload": {
                        "check_agenda": true,
                        "video_s3_key.$": "$.detail.object.key"
                      }
                    },
                    "ResultPath": "$.agendaCheckRetry",
                    "Next": "AgendaFoundAfterWait3",
                    "Retry": [
                      {
                        "ErrorEquals": ["States.TaskFailed"],
                        "IntervalSeconds": 10,
                        "MaxAttempts": 2,
                        "BackoffRate": 2
                      }
                    ],
                    "Catch": [
                      {
                        "ErrorEquals": ["States.ALL"],
                        "Next": "ProcessAllTranscripts"
                      }
                    ]
                  },
                  "AgendaFoundAfterWait3": {
                    "Type": "Choice",
                    "Choices": [
                      {
                        "Variable": "$.agendaCheckRetry.Payload.agenda_exists",
                        "BooleanEquals": true,
                        "Next": "ProcessAllTranscripts"
                      }
                    ],
                    "Default": "WaitForAgenda4"
                  },
                  "WaitForAgenda4": {
                    "Type": "Wait",
                    "Seconds": 60,
                    "Next": "CheckForAgendaRetry4"
                  },
                  "CheckForAgendaRetry4": {
                    "Type": "Task",
                    "Resource": "arn:aws:states:::lambda:invoke",
                    "Parameters": {
                      "FunctionName": "
            - Fn::GetAtt:
                - MeetingProcessorIntegrationProcessingStatusMonitor7E617749
                - Arn
            - |-
              ",
                      "Payload": {
                        "check_agenda": true,
                        "video_s3_key.$": "$.detail.object.key"
                      }
                    },
                    "ResultPath": "$.agendaCheckRetry",
                    "Next": "AgendaFoundAfterWait4",
                    "Retry": [
                      {
                        "ErrorEquals": ["States.TaskFailed"],
                        "IntervalSeconds": 10,
                        "MaxAttempts": 2,
                        "BackoffRate": 2
                      }
                    ],
                    "Catch": [
                      {
                        "ErrorEquals": ["States.ALL"],
                        "Next": "ProcessAllTranscripts"
                      }
                    ]
                  },
                  "AgendaFoundAfterWait4": {
                    "Type": "Choice",
                    "Choices": [
                      {
                        "Variable": "$.agendaCheckRetry.Payload.agenda_exists",
                        "BooleanEquals": true,
                        "Next": "ProcessAllTranscripts"
                      }
                    ],
                    "Default": "WaitForAgenda5"
                  },
                  "WaitForAgenda5": {
                    "Type": "Wait",
                    "Seconds": 60,
                    "Next": "CheckForAgendaFinal"
                  },
                  "CheckForAgendaFinal": {
                    "Type": "Task",
                    "Resource": "arn:aws:states:::lambda:invoke",
                    "Parameters": {
                      "FunctionName": "
            - Fn::GetAtt:
                - MeetingProcessorIntegrationProcessingStatusMonitor7E617749
                - Arn
            - |-
              ",
                      "Payload": {
                        "check_agenda": true,
                        "video_s3_key.$": "$.detail.object.key"
                      }
                    },
                    "ResultPath": "$.agendaCheckRetry",
                    "Next": "ProcessAllTranscripts",
                    "Retry": [
                      {
                        "ErrorEquals": ["States.TaskFailed"],
                        "IntervalSeconds": 10,
                        "MaxAttempts": 2,
                        "BackoffRate": 2
                      }
                    ],
                    "Catch": [
                      {
                        "ErrorEquals": ["States.ALL"],
                        "Next": "ProcessAllTranscripts"
                      }
                    ]
                  },
                  "ProcessAllTranscripts": {
                    "Type": "Task",
                    "Resource": "arn:aws:states:::lambda:invoke",
                    "Parameters": {
                      "FunctionName": "
            - Fn::GetAtt:
                - MeetingProcessorIntegrationAiMeetingAnalyzer85F11DA9
                - Arn
            - |-
              ",
                      "Payload": {
                        "transcriptionResults.$": "$.transcriptionResults",
                        "mediaConvertResult.$": "$.mediaConvertResult",
                        "originalVideoInfo": {
                          "bucket.$": "$.detail.bucket.name",
                          "key.$": "$.detail.object.key"
                        },
                        "isChunkedProcessing": true,
                        "agendaData.$": "$.agendaCheck.Payload"
                      }
                    },
                    "ResultPath": "$.processResult",
                    "Next": "ConvertHtmlToPdf",
                    "Catch": [
                      {
                        "ErrorEquals": ["States.ALL"],
                        "Next": "TranscriptionProcessingFailed"
                      }
                    ]
                  },
                  "ConvertHtmlToPdf": {
                    "Type": "Task",
                    "Resource": "arn:aws:states:::lambda:invoke",
                    "Parameters": {
                      "FunctionName": "
            - Fn::GetAtt:
                - MeetingProcessorIntegrationDocumentPdfGeneratorC7E88E19
                - Arn
            - |-
              ",
                      "Payload": {
                        "htmlS3Uri.$": "$.processResult.Payload.htmlS3Uri",
                        "outputFileName.$": "$.detail.object.key"
                      }
                    },
                    "ResultPath": "$.convertPdfResult",
                    "Next": "SendEmailNotification",
                    "Retry": [
                      {
                        "ErrorEquals": ["States.TaskFailed"],
                        "IntervalSeconds": 30,
                        "MaxAttempts": 3,
                        "BackoffRate": 2
                      }
                    ],
                    "Catch": [
                      {
                        "ErrorEquals": ["States.ALL"],
                        "Next": "TranscriptionProcessingFailed"
                      }
                    ]
                  },
                  "SendEmailNotification": {
                    "Type": "Task",
                    "Resource": "arn:aws:states:::lambda:invoke",
                    "Parameters": {
                      "FunctionName": "
            - Fn::GetAtt:
                - MeetingProcessorIntegrationNotificationSender882C3342
                - Arn
            - |
              ",
                      "Payload": {
                        "htmlS3Uri.$": "$.processResult.Payload.htmlS3Uri",
                        "pdfS3Uri.$": "$.convertPdfResult.Payload.pdfS3Uri",
                        "originalFileName.$": "$.detail.object.key"
                      }
                    },
                    "ResultPath": "$.emailResult",
                    "End": true,
                    "Retry": [
                      {
                        "ErrorEquals": ["States.TaskFailed"],
                        "IntervalSeconds": 30,
                        "MaxAttempts": 3,
                        "BackoffRate": 2
                      }
                    ],
                    "Catch": [
                      {
                        "ErrorEquals": ["States.ALL"],
                        "Next": "EmailNotificationFailed"
                      }
                    ]
                  },
                  "MediaConvertFailed": {
                    "Type": "Fail",
                    "Cause": "MediaConvert Job Failed",
                    "Error": "The MediaConvert job failed to complete successfully."
                  },
                  "AudioFileNotFound": {
                    "Type": "Fail",
                    "Cause": "Audio File Not Found",
                    "Error": "One or more audio files generated by MediaConvert could not be found in S3."
                  },
                  "TranscriptionFailed": {
                    "Type": "Fail",
                    "Cause": "Transcription Job Failed",
                    "Error": "One or more AWS Transcribe jobs failed to complete."
                  },
                  "TranscriptionProcessingFailed": {
                    "Type": "Fail",
                    "Cause": "Transcript Processing Failed",
                    "Error": "The transcript processing and analysis failed to complete."
                  },
                  "EmailNotificationFailed": {
                    "Type": "Fail",
                    "Cause": "Email Notification Failed",
                    "Error": "Failed to send email notification to user."
                  }
                }
              }
      RoleArn:
        Fn::GetAtt:
          - MeetingProcessorIntegrationMeetingProcessingWorkflowRole53AFE4A1
          - Arn
      StateMachineName: semantic-lighthouse-v3-795592-processing-workflow
    DependsOn:
      - MeetingProcessorIntegrationMeetingProcessingWorkflowRoleDefaultPolicyD815DF7C
      - MeetingProcessorIntegrationMeetingProcessingWorkflowRole53AFE4A1
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/MeetingProcessingWorkflow/Resource
  MeetingProcessorIntegrationMeetingProcessingWorkflowEventsRole6695A1DC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/MeetingProcessingWorkflow/EventsRole/Resource
  MeetingProcessorIntegrationMeetingProcessingWorkflowEventsRoleDefaultPolicyFC32BFC7:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: states:StartExecution
            Effect: Allow
            Resource:
              Ref: MeetingProcessorIntegrationMeetingProcessingWorkflow47CF2964
        Version: "2012-10-17"
      PolicyName: MeetingProcessorIntegrationMeetingProcessingWorkflowEventsRoleDefaultPolicyFC32BFC7
      Roles:
        - Ref: MeetingProcessorIntegrationMeetingProcessingWorkflowEventsRole6695A1DC
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/MeetingProcessingWorkflow/EventsRole/DefaultPolicy/Resource
  MeetingProcessorIntegrationAgendaDocumentProcessorServiceRoleDE91FCF3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/AgendaDocumentProcessor/ServiceRole/Resource
  MeetingProcessorIntegrationAgendaDocumentProcessorServiceRoleDefaultPolicy6EDF0A67:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DataResourcesMeetingsBucket978E0EC1
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DataResourcesMeetingsBucket978E0EC1
                        - Arn
                    - /*
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DataResourcesMeetingsTableB4BEF5CF
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DataResourcesMeetingsTableB4BEF5CF
                        - Arn
                    - /index/*
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DataResourcesSystemConfigTableCCF6C008
                  - Arn
              - Ref: AWS::NoValue
          - Action:
              - bedrock:*
              - sts:GetCallerIdentity
              - textract:*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: MeetingProcessorIntegrationAgendaDocumentProcessorServiceRoleDefaultPolicy6EDF0A67
      Roles:
        - Ref: MeetingProcessorIntegrationAgendaDocumentProcessorServiceRoleDE91FCF3
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/AgendaDocumentProcessor/ServiceRole/DefaultPolicy/Resource
  MeetingProcessorIntegrationAgendaDocumentProcessor66E73DE9:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: ace3350565f63b491b50caae80218f961d8eae7f5f97e9096fc74c45c80953fd.zip
      Environment:
        Variables:
          BUCKET_NAME:
            Ref: DataResourcesMeetingsBucket978E0EC1
          MEETINGS_TABLE_NAME:
            Ref: DataResourcesMeetingsTableB4BEF5CF
          SYSTEM_CONFIG_TABLE_NAME:
            Ref: DataResourcesSystemConfigTableCCF6C008
      FunctionName: semantic-lighthouse-v3-795592-agenda-document-processor
      Handler: handler.lambda_handler
      MemorySize: 1024
      Role:
        Fn::GetAtt:
          - MeetingProcessorIntegrationAgendaDocumentProcessorServiceRoleDE91FCF3
          - Arn
      Runtime: python3.12
      Timeout: 900
    DependsOn:
      - MeetingProcessorIntegrationAgendaDocumentProcessorServiceRoleDefaultPolicy6EDF0A67
      - MeetingProcessorIntegrationAgendaDocumentProcessorServiceRoleDE91FCF3
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/AgendaDocumentProcessor/Resource
      aws:asset:path: asset.ace3350565f63b491b50caae80218f961d8eae7f5f97e9096fc74c45c80953fd
      aws:asset:is-bundled: false
      aws:asset:property: Code
  MeetingProcessorIntegrationAgendaDocumentProcessorLogGroupBEA54B6C:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: MeetingProcessorIntegrationAgendaDocumentProcessor66E73DE9
      RetentionInDays: 731
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/MeetingProcessorIntegration/AgendaDocumentProcessor/LogGroup/Resource
  ApiGatewayCloudWatchSetupApiGatewayCloudWatchRole5B0857C0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      Description: Role for API Gateway to push logs to CloudWatch
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
      RoleName: v3-api-gateway-cloudwatch-role
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/ApiGatewayCloudWatchSetup/ApiGatewayCloudWatchRole/Resource
  ApiGatewayCloudWatchSetupApiGatewayAccount819BB90F:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - ApiGatewayCloudWatchSetupApiGatewayCloudWatchRole5B0857C0
          - Arn
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/ApiGatewayCloudWatchSetup/ApiGatewayAccount
  CustomEmailCustomMessageLambdaLogGroup657A6351:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/CustomEmail/CustomMessageLambdaLogGroup/Resource
  CustomEmailCustomMessageLambdaServiceRole08BB419F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/CustomEmail/CustomMessageLambda/ServiceRole/Resource
  CustomEmailCustomMessageLambda37FB35A9:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 934d46943cbdc2fb049773e27177c53d413114af931d480e349ef20bb308dfe6.zip
      Description: lambda function for custom email messages
      Environment:
        Variables:
          FRONTEND_URL:
            Fn::Join:
              - ""
              - - https://
                - Fn::GetAtt:
                    - FrontendFrontendDistribution0FCC69EF
                    - DomainName
      Handler: custom-message.handler
      LoggingConfig:
        LogGroup:
          Ref: CustomEmailCustomMessageLambdaLogGroup657A6351
      Role:
        Fn::GetAtt:
          - CustomEmailCustomMessageLambdaServiceRole08BB419F
          - Arn
      Runtime: nodejs18.x
    DependsOn:
      - CustomEmailCustomMessageLambdaServiceRole08BB419F
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/CustomEmail/CustomMessageLambda/Resource
      aws:asset:path: asset.934d46943cbdc2fb049773e27177c53d413114af931d480e349ef20bb308dfe6
      aws:asset:is-bundled: false
      aws:asset:property: Code
  S3VideoUploadRule72FFD54F:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.s3
        detail-type:
          - Object Created
        detail:
          bucket:
            name:
              - Ref: DataResourcesMeetingsBucket978E0EC1
          object:
            key:
              - prefix: uploads/meeting_recordings/
      State: ENABLED
      Targets:
        - Arn:
            Ref: MeetingProcessorIntegrationMeetingProcessingWorkflow47CF2964
          Id: Target0
          InputPath: $
          RoleArn:
            Fn::GetAtt:
              - MeetingProcessorIntegrationMeetingProcessingWorkflowEventsRole6695A1DC
              - Arn
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/S3VideoUploadRule/Resource
  S3AgendaUploadRuleF9ED3CB2:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.s3
        detail-type:
          - Object Created
        detail:
          bucket:
            name:
              - Ref: DataResourcesMeetingsBucket978E0EC1
          object:
            key:
              - prefix: uploads/agenda_documents/
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - MeetingProcessorIntegrationAgendaDocumentProcessor66E73DE9
              - Arn
          Id: Target0
          InputPath: $
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/S3AgendaUploadRule/Resource
  S3AgendaUploadRuleAllowEventRuleSemanticLighthouseStackv3MeetingProcessorIntegrationAgendaDocumentProcessor77AE41F682403EC8:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - MeetingProcessorIntegrationAgendaDocumentProcessor66E73DE9
          - Arn
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - S3AgendaUploadRuleF9ED3CB2
          - Arn
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/S3AgendaUploadRule/AllowEventRuleSemanticLighthouseStackv3MeetingProcessorIntegrationAgendaDocumentProcessor77AE41F6
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/+0ca2/bOPK3rD4uGF+3XeCAfnNctxds0/jstIdFEAQ0NZbZUqKWpJx6Df/340OUKL/WSZPGTvQhrTSk5j0jcqzh687rV791Xv2Cb+UJib+dMDruLEYKk29Ig24W8k1ncVqQb6CuFtHYXnzCKURvo18jFAlI+QyzAWeUzDUsBqkEn+sRXCj+DhgouBh/BaJk9FaJAlCUF2M9eQg47hICUsMnmEk9ABkR81xRnmlEozc3591P3Q/9dxrXmHHybWCf889Y6jCDTJ0KGifQz/CYQeyJEC70JM0xZozfQnwOaspjA4o+9C/1o4PP9t+L0WV0jfysC0ETmnnsJfA/mlMQHpji793ESb+8XiJNII57mtiwYPDoBJGF/BpZwlv1uE1b97DVNpMY+vdAt5mz5TXqTTLnY8j955BWDldKv/M2QOKeLlGdYglXWmGE8SKeCJ6pzmIIMueZhFLTFTXjNacwxTPKRfRW29Iy2dPPCM66xjo9AbH2Oao1Xel7fVbTguvjlXNsGV9xi3C8/z3nFePlBG6nX8xA6FAAp+ylU8hGSdE7qk1Fx4UxrBY7hgkumAoldyhL/DMKtyAGgitOeG1wrQoqtHlPFD+ZKpXL2oWbAhJMpqswsYkxZ0lj2X9iaVJkxHDflZITis2li3c/EGaIy3luAsiJcSLgr0K7qvGYu0hmhfAzFuHtWez59mwPOVfO9StXTQTOlMkGPoKv0eiNs3M3tK+dYOSXRNC8ksRZc8N8Aw7Nid6XCrDuHEPwtB9Zonie4ZTHOtFfmqypp+ZYKGoG/wArXlaneOW0NzLpR3Khds/YnhXGlDGaJeeOqUH3z5tBf3gz7P/3c1/nxDKVfmB8jNkICM9iLOZnWQzfrV2puQpePHsx7DL0nrL9COePTcLaz9pqiRhOxzHuLAJDi0KnpIriFGcxA+Hp6wFeKB+K3iVMbp9RnQ5TyGov1Rboh+DaXTf4JFqhG+DexcIqXRQxnnwQvMj3Y2Pn4C5N7JD9QXloGXz2DLY8HAmDDM/tOskArzfRauYm/UL1bKU6V4v5iP5d8ZlPIQWh306KC5xAMDTLSX01KsYZKL/OmVAGci4VpJuE25E0Q+3to4OPoaQGtibAVlFXWPJLqOBtu0PAvQX4OS+pDczf6y21pr1/8KRHjKPHG1zzmUfT3sOq60jYfCmDLzDm2sh5usi59z7kh1YajS20uR6ASKmU5Z11iC/aJ8z9SG/lGCieBXu0oqDxfm5tJpgt3qAQptZzhAuVc1A4xgqX+jP1qOvNQ96mDe2sC39oa5m7y3iNQg+5Klem5W3AXcAC4WmOFdWb/qEj79lcKw6hh0Wn5aA47SyG3NaGsJRFCvGprWzkgmaE5ph1CeFF5bFujnmgSwK+ohRn2gNjW/Gg4Ep0IWzeFTVRq7xLPvAkfJ3kalGOKoXJ9CxjNKsqcVUC3j14bxG8SUOej0+KwzHEbry7R5+9+K2ArYCtgK2AT5hjn7tyzFIxWB/98MLg2Cz4VKPH7zmHI+AzXyM+WIiub21QRGuatNwBPRO1tYF/fIptlfOSlfPsBXwS6x+pvI82ehwr3jYWDtz6mxZTd9X8TzKy+/JVo0BuqPym0lnvkg/trwUrRl0Hx/FIYQXmZxnp9Xl4iO4GfmyyLf7njf+JuDkssR4XLAOY35xuQXAHfRyN4x2zqQ+L95fFzcuS9pid+4h1YxeWbk25RIwnsrP4WH5vYr7oKC+r5bZdf29t+RCgNGq7xP13O/MpZ2403AEC95TIeqn3yyUiPMmo4p3FZwliwDnTrippkp1lXUaxNHupRQQppsy3aRZ6outgsp2EKJLAJiP9yOd8pc3WdHp+AUEn8xUkO5qd/J5V0CQxH1jpyAq/+1uHW3k888hf+Kgryvty/5g0tLZp05oLIKaJk9SK/WEcDRYtZxWfPUa1adYZ1aqbvmf81qofxyl1z+v97y0XcWiKVRgppOJpOGMk8kbXZ5P2Esk3NwuNBJTsdM1/KIac8blJbR3XJfuuAiwRzmmiE98tnttOWdXN6dWmry4dkou8bL60S9ckLDZoJ05olnyEGRipzz69vzCPYYUvBSarLdspKEGJbEDrlkrTYz0QMGE0maqAJt7QL7vaYlv3whpZUC3rRrG0+P6rP1CYZvX0xor8kusQowQz0/7ZqMW08BZ+THAbHLWXo5EJYxsaHlTGwyPEt6VtCSIdnrwQBGzDvkn8yMXwlXnxuaGSrmnJdmPVj7oKEoGDIOZBhtCJlgv6N4jm3VkcZGIDss+XveK25qgzwR8wH8JfBRWGY9/vv3G+FVCz5DvuXYnS7OYL2au/wvV97wMstCKVb+LXZijtc97AclckqFVWq6yDVtaqbKESo/JXptYqP8cq1b6iVXer7men7jbnHKJV2iBoVymHr6w2YxylVex20uGt9pNX9nimehebYzXVLNZtyi9q1FfCrGpQz9WGfb1QdiuFuh24nluD7J37WMdUlWMYF5TFncVAcHPUmXGJ0sSLaIzjBEZFnnOhAiel9vC8Ca27ygPHbvRB2w+EZpRBEtQCzSlbE2wPFFzsjesLFtSUHHx50HI9ysF3AZdVDHuomzkj8H9Ykam5azaHl85VCrtEUkHuu4ulPTFTwTkmU5pBGRz+tlFJntDMHhR2yuO55zvoZa6KNOYHsI1feq0N+BJKRW+J7Kl3milzKKVmxt4OsNIhmdk6bRiJsSlysiCoHKBOc5pqv4Hg6i4YKsaxSMxRjV6Wg+PJBYZWmCbQsxX2KoFYBNv/miG171MP/ecOCCxUXqgV/rXLznSwCFNYQ7b+bwpu2uXLo+RubO/4Db6VhNFO91b2GLXN6kYvyP3acOPzt7QTGviXKNPJoPNV/mv2+vfO751Xv3yVlJ6UPfOdstv8/9zYKA1oVgAA
    Metadata:
      aws:cdk:path: SemanticLighthouseStack-v3/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  DataResourcesMeetingsBucketNameB3728687:
    Description: S3 bucket for meeting files
    Value:
      Ref: DataResourcesMeetingsBucket978E0EC1
  DataResourcesCloudFrontDomain1CBE5D65:
    Description: CloudFront domain for video CDN
    Value:
      Fn::GetAtt:
        - DataResourcesVideosDistributionCB495C72
        - DomainName
  DataResourcesMeetingsTableName38F5E376:
    Description: DynamoDB table for meeting metadata
    Value:
      Ref: DataResourcesMeetingsTableB4BEF5CF
  DataResourcesUserPreferencesTableName1A03184C:
    Description: DynamoDB table for user preferences
    Value:
      Ref: DataResourcesUserPreferencesTableC9E14B7D
  DataResourcesSystemConfigTableName2AD80A87:
    Description: DynamoDB table for system configuration
    Value:
      Ref: DataResourcesSystemConfigTableCCF6C008
  MeetingApiMeetingAuthApiEndpoint0916F2D1:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: MeetingApiMeetingAuthApi91B1C27C
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: MeetingApiMeetingAuthApiDeploymentStageprod66E6B130
          - /
  ApiGatewayCloudWatchSetupCloudWatchRoleArn26249CAB:
    Description: ARN of the API Gateway CloudWatch logging role
    Value:
      Fn::GetAtt:
        - ApiGatewayCloudWatchSetupApiGatewayCloudWatchRole5B0857C0
        - Arn
  UserPoolId:
    Description: Cognito User Pool ID
    Value:
      Ref: AuthUserPool8115E87F
  UserPoolClientId:
    Description: Cognito User Pool Client ID
    Value:
      Ref: AuthUserPoolClient0AA456E4
  ApiEndpoint:
    Description: API Gateway endpoint URL
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: MeetingApiMeetingAuthApi91B1C27C
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: MeetingApiMeetingAuthApiDeploymentStageprod66E6B130
          - /
  FrontendUrl:
    Description: Frontend CloudFront URL
    Value:
      Fn::Join:
        - ""
        - - https://
          - Fn::GetAtt:
              - FrontendFrontendDistribution0FCC69EF
              - DomainName
  VideoDistributionUrl:
    Description: Video CDN CloudFront URL for citation links
    Value:
      Fn::Join:
        - ""
        - - https://
          - Fn::GetAtt:
              - DataResourcesVideosDistributionCB495C72
              - DomainName
  ProcessingWorkflowArn:
    Description: Step Functions state machine ARN for meeting processing
    Value:
      Ref: MeetingProcessorIntegrationMeetingProcessingWorkflow47CF2964
  ApiGatewayCloudWatchRoleArn:
    Description: API Gateway CloudWatch logging role (automatically configured)
    Value:
      Fn::GetAtt:
        - ApiGatewayCloudWatchSetupApiGatewayCloudWatchRole5B0857C0
        - Arn
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-3
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-3
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-4
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - il-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
      - Fn::Equals:
          - Ref: AWS::Region
          - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
